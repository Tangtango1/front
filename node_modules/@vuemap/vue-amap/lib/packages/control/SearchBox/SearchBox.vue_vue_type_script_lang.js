'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var vueAmapUtil = require('@vuemap/vue-amap-util');

var script = vue.defineComponent({
  name: "ElAmapSearchBox",
  mixins: [vueAmapUtil.registerMixin],
  props: {
    type: {
      type: String
    },
    city: {
      type: String
    },
    datatype: {
      type: String
    },
    citylimit: {
      type: Boolean,
      default: false
    },
    inputId: {
      type: String
    },
    inputCustom: {
      type: Boolean,
      default: false
    },
    outputId: {
      type: String
    },
    outPutDirAuto: {
      type: Boolean,
      default: true
    },
    closeResultOnScroll: {
      type: Boolean,
      default: true
    },
    lang: {
      type: String
    },
    placeholder: {
      type: String
    }
  },
  data() {
    return {
      saveInputId: "",
      saveVisible: true
    };
  },
  created() {
    this.saveInputId = vueAmapUtil.guid();
  },
  methods: {
    __initComponent(options) {
      if (options.inputId) {
        this.saveInputId = options.inputId;
        delete options.inputId;
      }
      if (options.visible) {
        this.saveVisible = options.visible;
      }
      options.input = this.saveInputId;
      if (options.outputId) {
        options.output = options.outputId;
        delete options.outputId;
      }
      return new Promise((resolve) => {
        this.$parentComponent.plugin(["AMap.AutoComplete"], () => {
          this.$amapComponent = new AMap.AutoComplete(options);
          resolve();
        });
      });
    },
    __visible(flag) {
      this.saveVisible = flag;
    },
    __citylimit(flag) {
      this.$amapComponent.setCityLimit(flag);
    }
  }
});

exports["default"] = script;
//# sourceMappingURL=SearchBox.vue_vue_type_script_lang.js.map
