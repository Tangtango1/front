'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var vueAmapUtil = require('@vuemap/vue-amap-util');

var script = vue.defineComponent({
  name: "ElAmapControlHawkEye",
  mixins: [vueAmapUtil.registerMixin],
  props: {
    autoMove: {
      type: Boolean,
      default: true
    },
    showRectangle: {
      type: Boolean,
      default: true
    },
    showButton: {
      type: Boolean,
      default: true
    },
    isOpen: {
      type: Boolean,
      default: true
    },
    mapStyle: {
      type: String
    },
    layers: {
      type: Array
    },
    width: {
      type: String
    },
    height: {
      type: String
    },
    offset: {
      type: Array
    },
    borderStyle: {
      type: String
    },
    borderColor: {
      type: String
    },
    borderRadius: {
      type: String
    },
    borderWidth: {
      type: String
    },
    buttonSize: {
      type: String
    }
  },
  data() {
    return {};
  },
  methods: {
    __initComponent(options) {
      return new Promise((resolve) => {
        this.$parentComponent.plugin(["AMap.HawkEye"], () => {
          this.$amapComponent = new AMap.HawkEye(options);
          this.$parentComponent.addControl(this.$amapComponent);
          resolve();
        });
      });
    },
    destroyComponent() {
      if (this.$amapComponent && this.$parentComponent) {
        if (!this.parentInstance.isDestroy) {
          this.$parentComponent.removeControl(this.$amapComponent);
        }
        this.$amapComponent = null;
        this.$parentComponent = null;
      }
    },
    __isOpen(flag) {
      flag === false ? this.$amapComponent.close() : this.$amapComponent.open();
    }
  },
  render() {
    return null;
  }
});

exports["default"] = script;
//# sourceMappingURL=HawkEye.vue_vue_type_script_lang.js.map
