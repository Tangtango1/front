'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var vueAmapUtil = require('@vuemap/vue-amap-util');

var script = vue.defineComponent({
  name: "ElAmapElasticMarker",
  mixins: [vueAmapUtil.registerMixin],
  props: {
    position: {
      type: [Array, Object],
      required: true
    },
    title: {
      type: String
    },
    offset: {
      type: [Array, Object]
    },
    clickable: {
      type: Boolean,
      default: true
    },
    draggable: {
      type: Boolean,
      default: false
    },
    bubble: {
      type: Boolean,
      default: false
    },
    zooms: {
      type: Array
    },
    cursor: {
      type: String
    },
    topWhenClick: {
      type: Boolean,
      default: false
    },
    zoomStyleMapping: {
      type: Object
    },
    styles: {
      type: Array
    },
    extData: {
      type: Object,
      default: () => null
    }
  },
  emits: ["update:position"],
  data() {
    return {
      converters: {}
    };
  },
  methods: {
    __initComponent(options) {
      return new Promise((resolve) => {
        AMap.plugin(["AMap.ElasticMarker"], () => {
          this.$amapComponent = new AMap.ElasticMarker(options);
          this.$parentComponent.add(this.$amapComponent);
          this.bindModelEvents();
          resolve();
        });
      });
    },
    bindModelEvents() {
      this.$amapComponent.on("dragend", () => {
        this.emitPosition();
      });
      this.$amapComponent.on("touchend", () => {
        this.emitPosition();
      });
    },
    emitPosition() {
      const position = this.$amapComponent.getPosition();
      this.$emit("update:position", position.toArray());
    },
    destroyComponent() {
      if (!this.parentInstance.isDestroy) {
        this.$parentComponent.remove(this.$amapComponent);
      }
      this.$amapComponent = null;
      this.$parentComponent = null;
    }
  },
  render() {
    return null;
  }
});

exports["default"] = script;
//# sourceMappingURL=ElasticMarker.vue_vue_type_script_lang.js.map
