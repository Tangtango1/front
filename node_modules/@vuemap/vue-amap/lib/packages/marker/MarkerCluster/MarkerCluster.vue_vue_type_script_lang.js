'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var vueAmapUtil = require('@vuemap/vue-amap-util');

var script = vue.defineComponent({
  name: "ElAmapMarkerCluster",
  mixins: [vueAmapUtil.registerMixin],
  props: {
    points: {
      type: Array,
      required: true
    },
    gridSize: {
      type: Number
    },
    maxZoom: {
      type: Number
    },
    averageCenter: {
      type: Boolean,
      default: true
    },
    clusterByZoomChange: {
      type: Boolean,
      default: false
    },
    styles: {
      type: Array
    },
    renderClusterMarker: {
      type: Function
    },
    renderMarker: {
      type: Function
    }
  },
  data() {
    return {
      converters: {}
    };
  },
  methods: {
    __initComponent(options) {
      return new Promise((resolve) => {
        AMap.plugin(["AMap.MarkerCluster"], () => {
          const points = options.points;
          delete options.points;
          this.$amapComponent = new AMap.MarkerCluster(this.$parentComponent, points, options);
          resolve();
        });
      });
    },
    destroyComponent() {
      this.$amapComponent.setMap(null);
      this.$amapComponent = null;
      this.$parentComponent = null;
    },
    __points(value) {
      if (this.$amapComponent) {
        this.$amapComponent.setData(value);
      }
    }
  },
  render() {
    return null;
  }
});

exports["default"] = script;
//# sourceMappingURL=MarkerCluster.vue_vue_type_script_lang.js.map
