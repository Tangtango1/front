'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var vueAmapUtil = require('@vuemap/vue-amap-util');

var script = vue.defineComponent({
  name: "ElAmapLayerTiles3d",
  mixins: [vueAmapUtil.registerMixin],
  props: {
    url: {
      type: String,
      required: true
    },
    threeScriptUrl: {
      type: String,
      default: "//a.amap.com/jsapi_demos/static/data3d/lib/three.117.js"
    },
    threeGltfLoader: {
      type: String,
      default: "//a.amap.com/jsapi_demos/static/data3d/lib/GLTFLoader.117.min.js"
    },
    layerStyle: {
      type: Object
    }
  },
  data() {
    return {};
  },
  methods: {
    __initComponent(options) {
      return new Promise((resolve) => {
        this.$parentComponent.plugin(["AMap.3DTilesLayer"], () => {
          if (!window["THREE"]) {
            vueAmapUtil.loadScript(options.threeScriptUrl, () => {
              vueAmapUtil.loadScript(options.threeGltfLoader, () => {
                this.createLayer(options);
                resolve();
              });
            });
          } else {
            this.createLayer(options);
            resolve();
          }
        });
      });
    },
    destroyComponent() {
      this.$amapComponent = null;
      this.$parentComponent = null;
    },
    createLayer(options) {
      let layerStyle = {};
      if (options.layerStyle) {
        layerStyle = JSON.parse(JSON.stringify(options.layerStyle));
      }
      this.$amapComponent = new AMap["3DTilesLayer"]({
        map: this.$parentComponent,
        url: options.url,
        style: layerStyle
      });
      console.log(this.$amapComponent);
    }
  },
  render() {
    return null;
  }
});

exports["default"] = script;
//# sourceMappingURL=Tiles3D.vue_vue_type_script_lang.js.map
