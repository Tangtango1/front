'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var vueAmapUtil = require('@vuemap/vue-amap-util');

var script = vue.defineComponent({
  name: "ElAmapLayerLabels",
  mixins: [vueAmapUtil.registerMixin],
  provide() {
    return {
      parentInstance: this
    };
  },
  props: {
    zooms: {
      type: Array
    },
    opacity: {
      type: Number
    },
    collision: {
      type: Boolean,
      default: true
    },
    allowCollision: {
      type: Boolean,
      default: false
    }
  },
  data() {
    return {};
  },
  methods: {
    __initComponent(options) {
      this.$amapComponent = new AMap.LabelsLayer(options);
      this.$parentComponent.add(this.$amapComponent);
    },
    $$add(markers) {
      this.$amapComponent.add(markers);
    },
    destroyComponent() {
      if (!this.parentInstance.isDestroy) {
        this.$parentComponent.removeLayer(this.$amapComponent);
      }
      this.$amapComponent = null;
      this.$parentComponent = null;
    }
  }
});

exports["default"] = script;
//# sourceMappingURL=Labels.vue_vue_type_script_lang.js.map
