'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var vueAmapUtil = require('@vuemap/vue-amap-util');

var script = vue.defineComponent({
  name: "ElAmapLayerDistrict",
  mixins: [vueAmapUtil.registerMixin],
  props: {
    type: {
      type: String,
      default: "Country",
      validator(value) {
        return ["World", "Country", "Province"].indexOf(value) !== -1;
      }
    },
    adcode: {
      type: String
    },
    SOC: {
      type: String
    },
    depth: {
      type: Number
    },
    zooms: {
      type: Array
    },
    opacity: {
      type: Number
    },
    styles: {
      type: Object
    }
  },
  data() {
    return {};
  },
  methods: {
    __initComponent(options) {
      if (this.type === "World") {
        this.$amapComponent = new AMap.DistrictLayer.World(options);
      } else if (this.type === "Country") {
        this.$amapComponent = new AMap.DistrictLayer.Country(options);
      } else if (this.type === "Province") {
        this.$amapComponent = new AMap.DistrictLayer.Province(options);
      }
      this.$parentComponent.add(this.$amapComponent);
    },
    destroyComponent() {
      if (!this.parentInstance.isDestroy) {
        this.$parentComponent.remove(this.$amapComponent);
      }
      this.$amapComponent = null;
      this.$parentComponent = null;
    },
    __SOC(value) {
      this.$amapComponent.setSOC(value);
    }
  },
  render() {
    return null;
  }
});

exports["default"] = script;
//# sourceMappingURL=DistrictLayer.vue_vue_type_script_lang.js.map
