{"version":3,"file":"DistrictLayer.vue_vue_type_script_lang.js","sources":["../../../../../packages/layer/official/DistrictLayer/DistrictLayer.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport {registerMixin} from '@vuemap/vue-amap-util';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapLayerDistrict',\r\n  mixins: [registerMixin],\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      default: 'Country',\r\n      validator(value : string) {\r\n        // 这个值必须匹配下列字符串中的一个\r\n        return ['World', 'Country', 'Province'].indexOf(value) !== -1;\r\n      }\r\n    },\r\n    adcode: {\r\n      type: String\r\n    }, // 行政区的编码 adcode与省市行政区对照表，下载地址：https://a.amap.com/lbs/static/file/AMap_adcode_citycode.xlsx.zip\r\n    SOC: {\r\n      type: String\r\n    }, // 设定显示的国家,对应下载地址： https://a.amap.com/jsapi_demos/static/demo-center/js/soc-list.json\r\n    depth: {\r\n      type: Number\r\n    }, // 设定数据的层级深度，depth为0的时候只显示国家面，depth为1的时候显示省级， 当国家为中国时设置depth为2的可以显示市一级\r\n    zooms: {\r\n      type: Array\r\n    }, // 支持的缩放级别范围，默认范围 [2-30]\r\n    opacity: {\r\n      type: Number\r\n    }, // 透明度，默认 1\r\n    styles: {\r\n      type: Object\r\n    }// 为简易行政区图设定各面的填充颜色和描边颜色。 styles各字段的值可以是颜色值，也可以是一个返回颜色值* 的回调函数function。\r\n  },\r\n  data() {\r\n    return {\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      if ((this as any).type === 'World') {\r\n        this.$amapComponent = new AMap.DistrictLayer.World(options);\r\n      } else if ((this as any).type === 'Country') {\r\n        this.$amapComponent = new AMap.DistrictLayer.Country(options);\r\n      } else if ((this as any).type === 'Province') {\r\n        this.$amapComponent = new AMap.DistrictLayer.Province(options);\r\n      }\r\n      this.$parentComponent.add(this.$amapComponent);\r\n    },\r\n    destroyComponent() {\r\n      if(!this.parentInstance.isDestroy){\r\n        this.$parentComponent.remove(this.$amapComponent);\r\n      }\r\n      this.$amapComponent = null;\r\n      this.$parentComponent = null;\r\n    },\r\n    __SOC(value){\r\n      this.$amapComponent.setSOC(value);\r\n    }\r\n  },\r\n  render(){\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"],"names":["defineComponent","registerMixin"],"mappings":";;;;;;;AAIA,aAAeA,mBAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,qBAAA;AAAA,EACN,QAAQ,CAACC,yBAAA,CAAA;AAAA,EACT,KAAO,EAAA;AAAA,IACL,IAAM,EAAA;AAAA,MACJ,IAAM,EAAA,MAAA;AAAA,MACN,OAAS,EAAA,SAAA;AAAA,MACT,UAAU,KAAgB,EAAA;AAExB,QAAA,OAAO,CAAC,OAAA,EAAS,SAAW,EAAA,UAAA,CAAA,CAAY,QAAQ,KAAW,CAAA,KAAA,CAAA,CAAA,CAAA;AAAA,OAAA;AAAA,KAAA;AAAA,IAG/D,MAAQ,EAAA;AAAA,MACN,IAAM,EAAA,MAAA;AAAA,KAAA;AAAA,IAER,GAAK,EAAA;AAAA,MACH,IAAM,EAAA,MAAA;AAAA,KAAA;AAAA,IAER,KAAO,EAAA;AAAA,MACL,IAAM,EAAA,MAAA;AAAA,KAAA;AAAA,IAER,KAAO,EAAA;AAAA,MACL,IAAM,EAAA,KAAA;AAAA,KAAA;AAAA,IAER,OAAS,EAAA;AAAA,MACP,IAAM,EAAA,MAAA;AAAA,KAAA;AAAA,IAER,MAAQ,EAAA;AAAA,MACN,IAAM,EAAA,MAAA;AAAA,KAAA;AAAA,GAAA;AAAA,EAGV,IAAO,GAAA;AACL,IAAO,OAAA,EAAA,CAAA;AAAA,GAAA;AAAA,EAGT,OAAS,EAAA;AAAA,IACP,gBAAgB,OAAS,EAAA;AACvB,MAAK,IAAA,IAAA,CAAa,SAAS,OAAS,EAAA;AAClC,QAAA,IAAA,CAAK,cAAiB,GAAA,IAAI,IAAK,CAAA,aAAA,CAAc,KAAM,CAAA,OAAA,CAAA,CAAA;AAAA,OACzC,MAAA,IAAA,IAAA,CAAa,SAAS,SAAW,EAAA;AAC3C,QAAA,IAAA,CAAK,cAAiB,GAAA,IAAI,IAAK,CAAA,aAAA,CAAc,OAAQ,CAAA,OAAA,CAAA,CAAA;AAAA,OAC3C,MAAA,IAAA,IAAA,CAAa,SAAS,UAAY,EAAA;AAC5C,QAAA,IAAA,CAAK,cAAiB,GAAA,IAAI,IAAK,CAAA,aAAA,CAAc,QAAS,CAAA,OAAA,CAAA,CAAA;AAAA,OAAA;AAExD,MAAK,IAAA,CAAA,gBAAA,CAAiB,IAAI,IAAK,CAAA,cAAA,CAAA,CAAA;AAAA,KAAA;AAAA,IAEjC,gBAAmB,GAAA;AACjB,MAAG,IAAA,CAAC,IAAK,CAAA,cAAA,CAAe,SAAU,EAAA;AAChC,QAAK,IAAA,CAAA,gBAAA,CAAiB,OAAO,IAAK,CAAA,cAAA,CAAA,CAAA;AAAA,OAAA;AAEpC,MAAA,IAAA,CAAK,cAAiB,GAAA,IAAA,CAAA;AACtB,MAAA,IAAA,CAAK,gBAAmB,GAAA,IAAA,CAAA;AAAA,KAAA;AAAA,IAE1B,MAAM,KAAM,EAAA;AACV,MAAA,IAAA,CAAK,eAAe,MAAO,CAAA,KAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAAA;AAAA,EAG/B,MAAQ,GAAA;AACN,IAAO,OAAA,IAAA,CAAA;AAAA,GAAA;AAAA,CAAA,CAAA;;;;"}