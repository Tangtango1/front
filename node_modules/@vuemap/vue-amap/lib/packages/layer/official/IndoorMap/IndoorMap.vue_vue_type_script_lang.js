'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var vueAmapUtil = require('@vuemap/vue-amap-util');

var script = vue.defineComponent({
  name: "ElAmapLayerIndoorMap",
  mixins: [vueAmapUtil.registerMixin],
  props: {
    opacity: {
      type: Number
    },
    cursor: {
      type: String
    },
    hideFloorBar: {
      type: Boolean,
      default: false
    }
  },
  data() {
    return {};
  },
  methods: {
    __initComponent(options) {
      return new Promise((resolve) => {
        AMap.plugin(["AMap.IndoorMap"], () => {
          this.$amapComponent = new AMap.IndoorMap(options);
          const layers = this.$parentComponent.getLayers();
          layers.push(this.$amapComponent);
          this.$parentComponent.setLayers(layers);
          resolve();
        });
      });
    },
    destroyComponent() {
      const layers = this.$parentComponent.getLayers();
      let index = -1;
      for (let i = 0; i < layers.length; i++) {
        if (vueAmapUtil.isIndoorMapInstance(layers[i])) {
          index = i;
          break;
        }
      }
      if (index > -1) {
        layers.splice(index, 1);
        this.$parentComponent.setLayers(layers);
      }
      this.$amapComponent = null;
      this.$parentComponent = null;
    },
    __hideFloorBar(flag) {
      flag === false ? this.$amapComponent.hideFloorBar() : this.$amapComponent.showFloorBar();
    }
  },
  render() {
    return null;
  }
});

exports["default"] = script;
//# sourceMappingURL=IndoorMap.vue_vue_type_script_lang.js.map
