{"version":3,"file":"MarkerCluster.vue_vue_type_script_lang.mjs","sources":["../../../../packages/marker/MarkerCluster/MarkerCluster.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport {registerMixin} from '@vuemap/vue-amap-util';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapMarkerCluster',\r\n  mixins: [registerMixin],\r\n  props: {\r\n    points: {\r\n      type: Array,\r\n      required: true\r\n    }, // 需要进行聚合显示的点数据\r\n    gridSize: {\r\n      type: Number\r\n    }, // 聚合计算时网格的像素大小，默认60\r\n    maxZoom: {\r\n      type: Number\r\n    }, // 最大的聚合级别，大于该级别就不进行相应的聚合。默认值为 18，即小于 18 级的级别均进行聚合，18 及以上级别不进行聚合\r\n    averageCenter: {\r\n      type: Boolean,\r\n      default: true\r\n    }, // 聚合点的图标位置是否是所有聚合内点的中心点。默认为 true。数据中如果含有权重值，以权重高的点为中心进行聚合\r\n    clusterByZoomChange: {\r\n      type: Boolean,\r\n      default: false\r\n    }, // 地图缩放过程中是否聚合。默认值 false。\r\n    styles: {\r\n      type: Array\r\n    }, // 指定聚合后的点标记的图标样式，可缺省，缺省时为默认样式\r\n    renderClusterMarker: {\r\n      type: Function\r\n    }, // 该方法用来实现聚合点的自定义绘制，由开发者自己实现，API 将在绘制每个聚合点的时候调用这个方法，可以实现聚合点样式的灵活设定，指定了 renderClusterMarker 后 styles 无效。\r\n    renderMarker: {\r\n      type: Function\r\n    } // 该方法用来实现非聚合点的自定义绘制，由开发者自己实现，API 将在绘制每个非聚合点的时候调用这个方法\r\n  },\r\n  data() {\r\n    return {\r\n      converters: {\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      return new Promise<void>((resolve) => {\r\n        AMap.plugin(['AMap.MarkerCluster'], () => {\r\n          const points = options.points;\r\n          delete options.points;\r\n          this.$amapComponent = new AMap.MarkerCluster(this.$parentComponent, points, options);\r\n          resolve();\r\n        });\r\n      });\r\n    },\r\n    destroyComponent() {\r\n      // this.$amapComponent.setData([])\r\n      this.$amapComponent.setMap(null);\r\n      this.$amapComponent = null;\r\n      this.$parentComponent = null;\r\n    },\r\n    __points(value) {\r\n      if (this.$amapComponent) {\r\n        this.$amapComponent.setData(value);\r\n      }\r\n    }\r\n  },\r\n  render() {\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"],"names":[],"mappings":";;;AAIA,aAAe,eAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,qBAAA;AAAA,EACN,QAAQ,CAAC,aAAA,CAAA;AAAA,EACT,KAAO,EAAA;AAAA,IACL,MAAQ,EAAA;AAAA,MACN,IAAM,EAAA,KAAA;AAAA,MACN,QAAU,EAAA,IAAA;AAAA,KAAA;AAAA,IAEZ,QAAU,EAAA;AAAA,MACR,IAAM,EAAA,MAAA;AAAA,KAAA;AAAA,IAER,OAAS,EAAA;AAAA,MACP,IAAM,EAAA,MAAA;AAAA,KAAA;AAAA,IAER,aAAe,EAAA;AAAA,MACb,IAAM,EAAA,OAAA;AAAA,MACN,OAAS,EAAA,IAAA;AAAA,KAAA;AAAA,IAEX,mBAAqB,EAAA;AAAA,MACnB,IAAM,EAAA,OAAA;AAAA,MACN,OAAS,EAAA,KAAA;AAAA,KAAA;AAAA,IAEX,MAAQ,EAAA;AAAA,MACN,IAAM,EAAA,KAAA;AAAA,KAAA;AAAA,IAER,mBAAqB,EAAA;AAAA,MACnB,IAAM,EAAA,QAAA;AAAA,KAAA;AAAA,IAER,YAAc,EAAA;AAAA,MACZ,IAAM,EAAA,QAAA;AAAA,KAAA;AAAA,GAAA;AAAA,EAGV,IAAO,GAAA;AACL,IAAO,OAAA;AAAA,MACL,UAAY,EAAA,EAAA;AAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAIhB,OAAS,EAAA;AAAA,IACP,gBAAgB,OAAS,EAAA;AACvB,MAAO,OAAA,IAAI,OAAc,CAAA,CAAC,OAAY,KAAA;AACpC,QAAK,IAAA,CAAA,MAAA,CAAO,CAAC,oBAAA,CAAA,EAAuB,MAAM;AACxC,UAAA,MAAM,SAAS,OAAQ,CAAA,MAAA,CAAA;AACvB,UAAA,OAAO,OAAQ,CAAA,MAAA,CAAA;AACf,UAAA,IAAA,CAAK,iBAAiB,IAAI,IAAA,CAAK,aAAc,CAAA,IAAA,CAAK,kBAAkB,MAAQ,EAAA,OAAA,CAAA,CAAA;AAC5E,UAAA,OAAA,EAAA,CAAA;AAAA,SAAA,CAAA,CAAA;AAAA,OAAA,CAAA,CAAA;AAAA,KAAA;AAAA,IAIN,gBAAmB,GAAA;AAEjB,MAAA,IAAA,CAAK,eAAe,MAAO,CAAA,IAAA,CAAA,CAAA;AAC3B,MAAA,IAAA,CAAK,cAAiB,GAAA,IAAA,CAAA;AACtB,MAAA,IAAA,CAAK,gBAAmB,GAAA,IAAA,CAAA;AAAA,KAAA;AAAA,IAE1B,SAAS,KAAO,EAAA;AACd,MAAA,IAAI,KAAK,cAAgB,EAAA;AACvB,QAAA,IAAA,CAAK,eAAe,OAAQ,CAAA,KAAA,CAAA,CAAA;AAAA,OAAA;AAAA,KAAA;AAAA,GAAA;AAAA,EAIlC,MAAS,GAAA;AACP,IAAO,OAAA,IAAA,CAAA;AAAA,GAAA;AAAA,CAAA,CAAA;;;;"}