import { defineComponent } from 'vue';
import { registerMixin } from '@vuemap/vue-amap-util';

var script = defineComponent({
  name: "ElAmapText",
  mixins: [registerMixin],
  props: {
    position: {
      type: [Array, Object],
      required: true
    },
    text: {
      type: String
    },
    title: {
      type: String
    },
    offset: {
      type: [Array, Object]
    },
    anchor: {
      type: [String, Array]
    },
    angle: {
      type: Number
    },
    clickable: {
      type: Boolean,
      default: true
    },
    draggable: {
      type: Boolean,
      default: false
    },
    bubble: {
      type: Boolean,
      default: false
    },
    zooms: {
      type: Array
    },
    cursor: {
      type: String
    },
    topWhenClick: {
      type: Boolean,
      default: false
    },
    textStyle: {
      type: Object
    },
    extData: null
  },
  emits: ["update:position"],
  data() {
    return {
      propsRedirect: {
        textStyle: "style"
      },
      converters: {}
    };
  },
  methods: {
    __initComponent(options) {
      this.$amapComponent = new AMap.Text(options);
      this.$parentComponent.add(this.$amapComponent);
      this.bindModelEvents();
    },
    bindModelEvents() {
      this.$amapComponent.on("dragend", () => {
        this.emitPosition();
      });
      this.$amapComponent.on("touchend", () => {
        this.emitPosition();
      });
    },
    emitPosition() {
      const position = this.$amapComponent.getPosition();
      this.$emit("update:position", position.toArray());
    },
    destroyComponent() {
      this.$amapComponent.setMap(null);
      this.$amapComponent = null;
      this.$parentComponent = null;
    }
  },
  render() {
    return null;
  }
});

export { script as default };
//# sourceMappingURL=Text.vue_vue_type_script_lang.mjs.map
