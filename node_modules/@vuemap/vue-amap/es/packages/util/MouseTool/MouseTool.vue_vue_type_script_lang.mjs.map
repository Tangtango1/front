{"version":3,"file":"MouseTool.vue_vue_type_script_lang.mjs","sources":["../../../../packages/util/MouseTool/MouseTool.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport {registerMixin} from '@vuemap/vue-amap-util';\r\nimport type { PropType} from \"vue\";\r\nexport interface TooltipText {\r\n  marker?: string\r\n  circle?: string\r\n  rectangle?: string\r\n  polyline?: string\r\n  polygon?: string\r\n  measureArea?: string\r\n  rule?: string\r\n  rectZoomIn?: string\r\n  rectZoomOut?: string\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapMouseTool',\r\n  mixins: [registerMixin],\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      required: true,\r\n      default: 'marker',\r\n      validator(value: string) {\r\n        return ['marker', 'circle', 'rectangle', 'polyline', 'polygon', 'measureArea', 'rule', 'rectZoomIn', 'rectZoomOut'].includes(value)\r\n      }\r\n    }, // 类型\r\n    drawOptions: {\r\n      type: Object,\r\n      default: () => null\r\n    }, // 绘制图层的属性\r\n    autoClear: {\r\n      type: Boolean,\r\n      default: true\r\n    }, // 是否绘制结束后自动清空图层\r\n    showTooltip: {\r\n      type: Boolean,\r\n      default: true\r\n    }, // 是否显示提示信息\r\n    tooltipTextMap: {\r\n      type: Object as PropType<TooltipText>,\r\n      default: () => null\r\n    }, // 提示信息的map\r\n    textOptions: {\r\n      type: Object,\r\n      default: () => null\r\n    }\r\n  },\r\n  emits: ['draw'],\r\n  data() {\r\n    return {\r\n      preMapCursor: '',\r\n      tipTexts: {\r\n        marker: '单击地图选择点位',\r\n        circle: '按住鼠标左键拖拽绘制圆',\r\n        rectangle: '按住鼠标左键拖拽绘制矩形',\r\n        polyline: '单击地图选择拐点，双击地图完成折线绘制',\r\n        polygon: '单击地图选择拐点，双击地图完成多边形绘制',\r\n        measureArea: '单击地图选择拐点，双击地图完成绘制并计算面积',\r\n        rule: '单击地图选择拐点，右击地图完成绘制并计算距离',\r\n        rectZoomIn: '按住鼠标左键拖拽绘制矩形，松开左键放大地图',\r\n        rectZoomOut: '按住鼠标左键拖拽绘制矩形，松开左键放大地图',\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent() {\r\n      return new Promise<void>((resolve) => {\r\n        AMap.plugin(['AMap.MouseTool'], () => {\r\n          if(this.tooltipTextMap){\r\n            Object.assign(this.tipTexts, this.tooltipTextMap);\r\n          }\r\n          this.$amapComponent = new AMap.MouseTool(this.$parentComponent);\r\n          this.createTooltip();\r\n          this.__type();\r\n          this.bindEvent();\r\n          this.preMapCursor = this.$parentComponent.getDefaultCursor();\r\n          this.$parentComponent.setDefaultCursor('crosshair');\r\n          resolve();\r\n        });\r\n      });\r\n    },\r\n    __type(){\r\n      const type = this.type;\r\n      if(this.$amapComponent[type]){\r\n        const options = this.drawOptions || {};\r\n        this.$amapComponent[type](options);\r\n        this.setText(this.tipTexts[type]);\r\n      }\r\n    },\r\n    createTooltip(){\r\n      if(this.showTooltip){\r\n        const textOptions = this.textOptions || {};\r\n        textOptions.anchor = 'top-left';\r\n        textOptions.clickable= false;\r\n        textOptions.bubble = true;\r\n        textOptions.offset = [10, 10]\r\n        this.$text = new AMap.Text(textOptions);\r\n        this.$parentComponent.add(this.$text);\r\n        this.$parentComponent.on('mousemove',this.getMousePosition)\r\n      }\r\n    },\r\n    getMousePosition(e){\r\n      const lnglat = e.lnglat;\r\n      this.$text.setPosition([lnglat.lng, lnglat.lat])\r\n    },\r\n    setText(content: string){\r\n      if(this.$text){\r\n        this.$text.setText(content);\r\n      }\r\n    },\r\n    bindEvent(){\r\n      this.$amapComponent.on('draw', (e: {obj: any,type: string}) => {\r\n        const type = this.type;\r\n        let emitData;\r\n        if(type === 'marker'){\r\n          emitData = e.obj.getPosition().toArray();\r\n        } else if (type === 'circle'){\r\n          emitData = {\r\n            center: e.obj.getCenter().toArray(),\r\n            radius: e.obj.getRadius()\r\n          }\r\n        } else if (type === 'rectangle'){\r\n          const bounds = e.obj.getBounds();\r\n          const southWest = bounds.getSouthWest();\r\n          const northEast = bounds.getNorthEast();\r\n          emitData = [southWest.toArray(), northEast.toArray()]\r\n        } else if (type === 'polyline'){\r\n          const path = e.obj.getPath();\r\n          emitData = path.map(v => v.toArray())\r\n        } else if (type === 'polygon'){\r\n          const path = e.obj.getPath();\r\n          emitData = path.map(v => v.toArray())\r\n        } else if (type === 'measureArea'){\r\n          const path = e.obj.getPath().map(v => v.toArray());\r\n          emitData = AMap.GeometryUtil.ringArea(path);\r\n        } else if (type === 'rule'){\r\n          const path = e.obj.getPath().map(v => v.toArray());\r\n          emitData = AMap.GeometryUtil.distanceOfLine(path);\r\n        } else if (type === 'rectZoomIn'){\r\n          emitData = true\r\n        } else if (type === 'rectZoomOut'){\r\n          emitData = true\r\n        }\r\n        this.$emit('draw', emitData, e.obj)\r\n        if(this.autoClear){\r\n          this.$$clear();\r\n          this.__type();\r\n        }\r\n      })\r\n    },\r\n    $$close(ifClear = true){\r\n      if(this.$amapComponent){\r\n        this.$amapComponent.close(ifClear);\r\n      }\r\n    },\r\n    $$open(){\r\n      this.__type();\r\n    },\r\n    $$clear(){\r\n      this.$$close(true);\r\n    },\r\n    destroyComponent() {\r\n      if(!this.parentInstance.isDestroy){\r\n        this.$amapComponent.close(true);\r\n        this.$parentComponent.setDefaultCursor(this.preMapCursor);\r\n        if(this.$text){\r\n          this.$parentComponent.off('mousemove', this.getMousePosition);\r\n          this.$parentComponent.remove(this.$text);\r\n          this.$text = null;\r\n        }\r\n      }\r\n      this.$amapComponent = null;\r\n      this.$parentComponent = null;\r\n    }\r\n  },\r\n  render(){\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"],"names":[],"mappings":"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"}