import { defineComponent } from 'vue';
import { registerMixin } from '@vuemap/vue-amap-util';

var script = defineComponent({
  name: "ElAmapLayerHeatMap",
  mixins: [registerMixin],
  props: {
    radius: {
      type: Number
    },
    gradient: {
      type: Object
    },
    zooms: {
      type: Array
    },
    opacity: {
      type: Array
    },
    config: {
      type: Object
    },
    dataSet: {
      type: Object
    }
  },
  data() {
    return {
      propsRedirect: {
        config: "3d"
      }
    };
  },
  methods: {
    __initComponent(options) {
      return new Promise((resolve) => {
        AMap.plugin(["AMap.HeatMap"], () => {
          delete options.dataSet;
          this.$amapComponent = new AMap.HeatMap(this.$parentComponent, options);
          if (this.dataSet) {
            this.$amapComponent.setDataSet(this.dataSet);
          }
          resolve();
        });
      });
    },
    destroyComponent() {
      this.$amapComponent.setDataSet({
        data: []
      });
      this.$amapComponent.setMap(null);
      this.$amapComponent = null;
      this.$parentComponent = null;
    }
  },
  render() {
    return null;
  }
});

export { script as default };
//# sourceMappingURL=HeatMap.vue_vue_type_script_lang.mjs.map
