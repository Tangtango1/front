import assign from './assign.mjs';
import assignIn from './assignIn.mjs';
import assignInWith from './assignInWith.mjs';
import assignWith from './assignWith.mjs';
import at from './at.mjs';
import create from './create.mjs';
import defaults from './defaults.mjs';
import defaultsDeep from './defaultsDeep.mjs';
import './entries.mjs';
import './entriesIn.mjs';
import './extend.mjs';
import './extendWith.mjs';
import findKey from './findKey.mjs';
import findLastKey from './findLastKey.mjs';
import forIn from './forIn.mjs';
import forInRight from './forInRight.mjs';
import forOwn from './forOwn.mjs';
import forOwnRight from './forOwnRight.mjs';
import functions from './functions.mjs';
import functionsIn from './functionsIn.mjs';
import get from './get.mjs';
import has from './has.mjs';
import hasIn from './hasIn.mjs';
import invert from './invert.mjs';
import invertBy from './invertBy.mjs';
import invoke from './invoke.mjs';
import keys from './keys.mjs';
import keysIn from './keysIn.mjs';
import mapKeys from './mapKeys.mjs';
import mapValues from './mapValues.mjs';
import merge from './merge.mjs';
import mergeWith from './mergeWith.mjs';
import omit from './omit.mjs';
import omitBy from './omitBy.mjs';
import pick from './pick.mjs';
import pickBy from './pickBy.mjs';
import result from './result.mjs';
import set from './set.mjs';
import setWith from './setWith.mjs';
import toPairs from './toPairs.mjs';
import toPairsIn from './toPairsIn.mjs';
import transform from './transform.mjs';
import unset from './unset.mjs';
import update from './update.mjs';
import updateWith from './updateWith.mjs';
import values from './values.mjs';
import valuesIn from './valuesIn.mjs';

var object = {
  assign, assignIn, assignInWith, assignWith, at,
  create, defaults, defaultsDeep, entries: toPairs, entriesIn: toPairsIn,
  extend: assignIn, extendWith: assignInWith, findKey, findLastKey, forIn,
  forInRight, forOwn, forOwnRight, functions, functionsIn,
  get, has, hasIn, invert, invertBy,
  invoke, keys, keysIn, mapKeys, mapValues,
  merge, mergeWith, omit, omitBy, pick,
  pickBy, result, set, setWith, toPairs,
  toPairsIn, transform, unset, update, updateWith,
  values, valuesIn
};

export { object as default };
//# sourceMappingURL=object.default.mjs.map
