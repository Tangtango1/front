{"version":3,"file":"_lazyValue.mjs","sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_lazyValue.js"],"sourcesContent":["import baseWrapperValue from './_baseWrapperValue.js';\nimport getView from './_getView.js';\nimport isArray from './isArray.js';\n\n/** Used to indicate the type of lazy iteratees. */\nvar LAZY_FILTER_FLAG = 1,\n    LAZY_MAP_FLAG = 2;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Extracts the unwrapped value from its lazy wrapper.\n *\n * @private\n * @name value\n * @memberOf LazyWrapper\n * @returns {*} Returns the unwrapped value.\n */\nfunction lazyValue() {\n  var array = this.__wrapped__.value(),\n      dir = this.__dir__,\n      isArr = isArray(array),\n      isRight = dir < 0,\n      arrLength = isArr ? array.length : 0,\n      view = getView(0, arrLength, this.__views__),\n      start = view.start,\n      end = view.end,\n      length = end - start,\n      index = isRight ? end : (start - 1),\n      iteratees = this.__iteratees__,\n      iterLength = iteratees.length,\n      resIndex = 0,\n      takeCount = nativeMin(length, this.__takeCount__);\n\n  if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n    return baseWrapperValue(array, this.__actions__);\n  }\n  var result = [];\n\n  outer:\n  while (length-- && resIndex < takeCount) {\n    index += dir;\n\n    var iterIndex = -1,\n        value = array[index];\n\n    while (++iterIndex < iterLength) {\n      var data = iteratees[iterIndex],\n          iteratee = data.iteratee,\n          type = data.type,\n          computed = iteratee(value);\n\n      if (type == LAZY_MAP_FLAG) {\n        value = computed;\n      } else if (!computed) {\n        if (type == LAZY_FILTER_FLAG) {\n          continue outer;\n        } else {\n          break outer;\n        }\n      }\n    }\n    result[resIndex++] = value;\n  }\n  return result;\n}\n\nexport default lazyValue;\n"],"names":[],"mappings":";;;;AAIA;AACA,IAAI,gBAAgB,GAAG,CAAC;AACxB,IAAI,aAAa,GAAG,CAAC,CAAC;AACtB;AACA;AACA,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,GAAG;AACrB,EAAE,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AACtC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO;AACxB,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AAC5B,MAAM,OAAO,GAAG,GAAG,GAAG,CAAC;AACvB,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;AAC1C,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAClD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK;AACxB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG;AACpB,MAAM,MAAM,GAAG,GAAG,GAAG,KAAK;AAC1B,MAAM,KAAK,GAAG,OAAO,GAAG,GAAG,IAAI,KAAK,GAAG,CAAC,CAAC;AACzC,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa;AACpC,MAAM,UAAU,GAAG,SAAS,CAAC,MAAM;AACnC,MAAM,QAAQ,GAAG,CAAC;AAClB,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AACxD;AACA,EAAE,IAAI,CAAC,KAAK,KAAK,CAAC,OAAO,IAAI,SAAS,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,CAAC,EAAE;AAC1E,IAAI,OAAO,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AACrD,GAAG;AACH,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB;AACA,EAAE,KAAK;AACP,EAAE,OAAO,MAAM,EAAE,IAAI,QAAQ,GAAG,SAAS,EAAE;AAC3C,IAAI,KAAK,IAAI,GAAG,CAAC;AACjB;AACA,IAAI,IAAI,SAAS,GAAG,CAAC,CAAC;AACtB,QAAQ,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7B;AACA,IAAI,OAAO,EAAE,SAAS,GAAG,UAAU,EAAE;AACrC,MAAM,IAAI,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC;AACrC,UAAU,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAClC,UAAU,IAAI,GAAG,IAAI,CAAC,IAAI;AAC1B,UAAU,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACrC;AACA,MAAM,IAAI,IAAI,IAAI,aAAa,EAAE;AACjC,QAAQ,KAAK,GAAG,QAAQ,CAAC;AACzB,OAAO,MAAM,IAAI,CAAC,QAAQ,EAAE;AAC5B,QAAQ,IAAI,IAAI,IAAI,gBAAgB,EAAE;AACtC,UAAU,SAAS,KAAK,CAAC;AACzB,SAAS,MAAM;AACf,UAAU,MAAM,KAAK,CAAC;AACtB,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,KAAK,CAAC;AAC/B,GAAG;AACH,EAAE,OAAO,MAAM,CAAC;AAChB;;;;"}