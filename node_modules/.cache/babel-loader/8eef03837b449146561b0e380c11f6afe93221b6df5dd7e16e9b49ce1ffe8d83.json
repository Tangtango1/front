{"ast":null,"code":"import { Plus as ElIconPlus } from '@element-plus/icons-vue';\nimport storage from '@/utils/storage';\nimport base from '@/utils/base';\nexport default {\n  components: {\n    ElIconPlus\n  },\n  data() {\n    return {\n      // 查看大图\n      dialogVisible: false,\n      // 查看大图\n      dialogImageUrl: '',\n      // 组件渲染图片的数组字段，有特殊格式要求\n      fileList: [],\n      fileUrlList: [],\n      myHeaders: {}\n    };\n  },\n  props: ['tip', 'action', 'limit', 'multiple', 'fileUrls'],\n  mounted() {\n    this.init();\n    this.myHeaders = {\n      Token: storage.get('Token')\n    };\n  },\n  watch: {\n    fileUrls: function (val, oldVal) {\n      //   console.log(\"new: %s, old: %s\", val, oldVal);\n      this.init();\n    }\n  },\n  computed: {\n    // 计算属性的 getter\n    getActionUrl: function () {\n      // return base.url + this.action + \"?token=\" + storage.get(\"token\");\n      return `/${this.$base.name}/` + this.action;\n    }\n  },\n  methods: {\n    // 初始化\n    init() {\n      //   console.log(this.fileUrls);\n      if (this.fileUrls) {\n        this.fileUrlList = this.fileUrls.split(',');\n        let fileArray = [];\n        this.fileUrlList.forEach(function (item, index) {\n          var url = item;\n          var name = index;\n          var file = {\n            name: name,\n            url: url\n          };\n          fileArray.push(file);\n        });\n        this.setFileList(fileArray);\n      }\n    },\n    handleBeforeUpload(file) {},\n    // 上传文件成功后执行\n    handleUploadSuccess(res, file, fileList) {\n      if (res && res.code === 0) {\n        fileList[fileList.length - 1]['url'] = '/upload/' + file.response.file;\n        this.setFileList(fileList);\n        this.$emit('change', this.fileUrlList.join(','));\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    // 图片上传失败\n    handleUploadErr(err, file, fileList) {\n      this.$message.error('文件上传失败');\n    },\n    // 移除图片\n    handleRemove(file, fileList) {\n      this.setFileList(fileList);\n      this.$emit('change', this.fileUrlList.join(','));\n    },\n    // 查看大图\n    handleUploadPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    // 限制图片数量\n    handleExceed(files, fileList) {\n      this.$message.warning(`最多上传${this.limit}张图片`);\n    },\n    // 重新对fileList进行赋值\n    setFileList(fileList) {\n      var fileArray = [];\n      var fileUrlArray = [];\n      // 有些图片不是公开的，所以需要携带token信息做权限校验\n      var token = storage.get('token');\n      fileList.forEach(function (item, index) {\n        var url = item.url.split('?')[0];\n        var name = item.name;\n        var file = {\n          name: name,\n          url: url + '?token=' + token\n        };\n        fileArray.push(file);\n        fileUrlArray.push(url);\n      });\n      this.fileList = fileArray;\n      this.fileUrlList = fileUrlArray;\n    }\n  }\n};","map":{"version":3,"names":["Plus","ElIconPlus","storage","base","components","data","dialogVisible","dialogImageUrl","fileList","fileUrlList","myHeaders","props","mounted","init","Token","get","watch","fileUrls","val","oldVal","computed","getActionUrl","$base","name","action","methods","split","fileArray","forEach","item","index","url","file","push","setFileList","handleBeforeUpload","handleUploadSuccess","res","code","length","response","$emit","join","$message","error","msg","handleUploadErr","err","handleRemove","handleUploadPreview","handleExceed","files","warning","limit","fileUrlArray","token"],"sources":["D:\\bise\\bise\\front\\src\\components\\common\\FileUpload.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 上传文件组件 -->\n    <el-upload\n      ref=\"upload\"\n      :action=\"getActionUrl\"\n      list-type=\"picture-card\"\n      :multiple=\"multiple\"\n      :limit=\"limit\"\n      :headers=\"myHeaders\"\n      :file-list=\"fileList\"\n      :on-exceed=\"handleExceed\"\n      :on-preview=\"handleUploadPreview\"\n      :on-remove=\"handleRemove\"\n      :on-success=\"handleUploadSuccess\"\n      :on-error=\"handleUploadErr\"\n      :before-upload=\"handleBeforeUpload\"\n    >\n      <el-icon><el-icon-plus /></el-icon>\n      <div slot=\"tip\" class=\"el-upload__tip\" style=\"color: #838fa1\">\n        {{ tip }}\n      </div>\n    </el-upload>\n    <el-dialog :visible.sync=\"dialogVisible\" size=\"tiny\" append-to-body>\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { Plus as ElIconPlus } from '@element-plus/icons-vue'\nimport storage from '@/utils/storage'\nimport base from '@/utils/base'\nexport default {\n  components: {\n    ElIconPlus,\n  },\n  data() {\n    return {\n      // 查看大图\n      dialogVisible: false,\n      // 查看大图\n      dialogImageUrl: '',\n      // 组件渲染图片的数组字段，有特殊格式要求\n      fileList: [],\n      fileUrlList: [],\n      myHeaders: {},\n    }\n  },\n  props: ['tip', 'action', 'limit', 'multiple', 'fileUrls'],\n  mounted() {\n    this.init()\n    this.myHeaders = {\n      Token: storage.get('Token'),\n    }\n  },\n  watch: {\n    fileUrls: function (val, oldVal) {\n      //   console.log(\"new: %s, old: %s\", val, oldVal);\n      this.init()\n    },\n  },\n  computed: {\n    // 计算属性的 getter\n    getActionUrl: function () {\n      // return base.url + this.action + \"?token=\" + storage.get(\"token\");\n      return `/${this.$base.name}/` + this.action\n    },\n  },\n  methods: {\n    // 初始化\n    init() {\n      //   console.log(this.fileUrls);\n      if (this.fileUrls) {\n        this.fileUrlList = this.fileUrls.split(',')\n        let fileArray = []\n        this.fileUrlList.forEach(function (item, index) {\n          var url = item\n          var name = index\n          var file = {\n            name: name,\n            url: url,\n          }\n          fileArray.push(file)\n        })\n        this.setFileList(fileArray)\n      }\n    },\n    handleBeforeUpload(file) {},\n    // 上传文件成功后执行\n    handleUploadSuccess(res, file, fileList) {\n      if (res && res.code === 0) {\n        fileList[fileList.length - 1]['url'] = '/upload/' + file.response.file\n        this.setFileList(fileList)\n        this.$emit('change', this.fileUrlList.join(','))\n      } else {\n        this.$message.error(res.msg)\n      }\n    },\n    // 图片上传失败\n    handleUploadErr(err, file, fileList) {\n      this.$message.error('文件上传失败')\n    },\n    // 移除图片\n    handleRemove(file, fileList) {\n      this.setFileList(fileList)\n      this.$emit('change', this.fileUrlList.join(','))\n    },\n    // 查看大图\n    handleUploadPreview(file) {\n      this.dialogImageUrl = file.url\n      this.dialogVisible = true\n    },\n    // 限制图片数量\n    handleExceed(files, fileList) {\n      this.$message.warning(`最多上传${this.limit}张图片`)\n    },\n    // 重新对fileList进行赋值\n    setFileList(fileList) {\n      var fileArray = []\n      var fileUrlArray = []\n      // 有些图片不是公开的，所以需要携带token信息做权限校验\n      var token = storage.get('token')\n      fileList.forEach(function (item, index) {\n        var url = item.url.split('?')[0]\n        var name = item.name\n        var file = {\n          name: name,\n          url: url + '?token=' + token,\n        }\n        fileArray.push(file)\n        fileUrlArray.push(url)\n      })\n      this.fileList = fileArray\n      this.fileUrlList = fileUrlArray\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}