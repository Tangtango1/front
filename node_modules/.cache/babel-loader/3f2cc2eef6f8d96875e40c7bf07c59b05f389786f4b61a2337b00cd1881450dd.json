{"ast":null,"code":"import baseEach from './_baseEach.mjs';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function (value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\nexport { baseFilter as default };","map":{"version":3,"names":["baseFilter","collection","predicate","result","baseEach","value","index","push"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseFilter.js"],"sourcesContent":["import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAUA,CAACC,UAAU,EAAEC,SAAS,EAAE;EACzC,IAAIC,MAAM,GAAG,EAAE;EACfC,QAAQ,CAACH,UAAU,EAAE,UAASI,KAAK,EAAEC,KAAK,EAAEL,UAAU,EAAE;IACtD,IAAIC,SAAS,CAACG,KAAK,EAAEC,KAAK,EAAEL,UAAU,CAAC,EAAE;MACvCE,MAAM,CAACI,IAAI,CAACF,KAAK,CAAC;IACxB;EACA,CAAG,CAAC;EACF,OAAOF,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}