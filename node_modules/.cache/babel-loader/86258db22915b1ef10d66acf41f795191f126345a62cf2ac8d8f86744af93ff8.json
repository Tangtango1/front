{"ast":null,"code":"import arrayPush from './_arrayPush.mjs';\nimport isFlattenable from './_isFlattenable.mjs';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n    length = array.length;\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\nexport { baseFlatten as default };","map":{"version":3,"names":["baseFlatten","array","depth","predicate","isStrict","result","index","length","isFlattenable","value","arrayPush"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseFlatten.js"],"sourcesContent":["import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n"],"mappings":";;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAWA,CAACC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EAC9D,IAAIC,KAAK,GAAG,CAAC,CAAC;IACVC,MAAM,GAAGN,KAAK,CAACM,MAAM;EAEzBJ,SAAS,KAAKA,SAAS,GAAGK,aAAa,CAAC;EACxCH,MAAM,KAAKA,MAAM,GAAG,EAAE,CAAC;EAEvB,OAAO,EAAEC,KAAK,GAAGC,MAAM,EAAE;IACvB,IAAIE,KAAK,GAAGR,KAAK,CAACK,KAAK,CAAC;IACxB,IAAIJ,KAAK,GAAG,CAAC,IAAIC,SAAS,CAACM,KAAK,CAAC,EAAE;MACjC,IAAIP,KAAK,GAAG,CAAC,EAAE;QACrB;QACQF,WAAW,CAACS,KAAK,EAAEP,KAAK,GAAG,CAAC,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,CAAC;MAClE,CAAO,MAAM;QACLK,SAAS,CAACL,MAAM,EAAEI,KAAK,CAAC;MAChC;IACA,CAAK,MAAM,IAAI,CAACL,QAAQ,EAAE;MACpBC,MAAM,CAACA,MAAM,CAACE,MAAM,CAAC,GAAGE,KAAK;IACnC;EACA;EACE,OAAOJ,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}