{"ast":null,"code":"import assignMergeValue from './_assignMergeValue.mjs';\nimport cloneBuffer from './_cloneBuffer.mjs';\nimport cloneTypedArray from './_cloneTypedArray.mjs';\nimport copyArray from './_copyArray.mjs';\nimport initCloneObject from './_initCloneObject.mjs';\nimport isArguments from './isArguments.mjs';\nimport isArray from './isArray.mjs';\nimport isArrayLikeObject from './isArrayLikeObject.mjs';\nimport isBuffer from './isBuffer.mjs';\nimport isFunction from './isFunction.mjs';\nimport isObject from './isObject.mjs';\nimport isPlainObject from './isPlainObject.mjs';\nimport isTypedArray from './isTypedArray.mjs';\nimport safeGet from './_safeGet.mjs';\nimport toPlainObject from './toPlainObject.mjs';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n    srcValue = safeGet(source, key),\n    stacked = stack.get(srcValue);\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;\n  var isCommon = newValue === undefined;\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n      isBuff = !isArr && isBuffer(srcValue),\n      isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      } else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      } else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      } else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      } else {\n        newValue = [];\n      }\n    } else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      } else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    } else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\nexport { baseMergeDeep as default };","map":{"version":3,"names":["baseMergeDeep","object","source","key","srcIndex","mergeFunc","customizer","stack","objValue","safeGet","srcValue","stacked","get","assignMergeValue","newValue","undefined","isCommon","isArr","isArray","isBuff","isBuffer","isTyped","isTypedArray","isArrayLikeObject","copyArray","cloneBuffer","cloneTypedArray","isPlainObject","isArguments","toPlainObject","isObject","isFunction","initCloneObject","set"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseMergeDeep.js"],"sourcesContent":["import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n"],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAaA,CAACC,MAAM,EAAEC,MAAM,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAE;EAClF,IAAIC,QAAQ,GAAGC,OAAO,CAACR,MAAM,EAAEE,GAAG,CAAC;IAC/BO,QAAQ,GAAGD,OAAO,CAACP,MAAM,EAAEC,GAAG,CAAC;IAC/BQ,OAAO,GAAGJ,KAAK,CAACK,GAAG,CAACF,QAAQ,CAAC;EAEjC,IAAIC,OAAO,EAAE;IACXE,gBAAgB,CAACZ,MAAM,EAAEE,GAAG,EAAEQ,OAAO,CAAC;IACtC;EACJ;EACE,IAAIG,QAAQ,GAAGR,UAAU,GACrBA,UAAU,CAACE,QAAQ,EAAEE,QAAQ,EAAGP,GAAG,GAAG,EAAE,EAAGF,MAAM,EAAEC,MAAM,EAAEK,KAAK,CAAC,GACjEQ,SAAS;EAEb,IAAIC,QAAQ,GAAGF,QAAQ,KAAKC,SAAS;EAErC,IAAIC,QAAQ,EAAE;IACZ,IAAIC,KAAK,GAAGC,OAAO,CAACR,QAAQ,CAAC;MACzBS,MAAM,GAAG,CAACF,KAAK,IAAIG,QAAQ,CAACV,QAAQ,CAAC;MACrCW,OAAO,GAAG,CAACJ,KAAK,IAAI,CAACE,MAAM,IAAIG,YAAY,CAACZ,QAAQ,CAAC;IAEzDI,QAAQ,GAAGJ,QAAQ;IACnB,IAAIO,KAAK,IAAIE,MAAM,IAAIE,OAAO,EAAE;MAC9B,IAAIH,OAAO,CAACV,QAAQ,CAAC,EAAE;QACrBM,QAAQ,GAAGN,QAAQ;MAC3B,CAAO,MACI,IAAIe,iBAAiB,CAACf,QAAQ,CAAC,EAAE;QACpCM,QAAQ,GAAGU,SAAS,CAAChB,QAAQ,CAAC;MACtC,CAAO,MACI,IAAIW,MAAM,EAAE;QACfH,QAAQ,GAAG,KAAK;QAChBF,QAAQ,GAAGW,WAAW,CAACf,QAAQ,EAAE,IAAI,CAAC;MAC9C,CAAO,MACI,IAAIW,OAAO,EAAE;QAChBL,QAAQ,GAAG,KAAK;QAChBF,QAAQ,GAAGY,eAAe,CAAChB,QAAQ,EAAE,IAAI,CAAC;MAClD,CAAO,MACI;QACHI,QAAQ,GAAG,EAAE;MACrB;IACA,CAAK,MACI,IAAIa,aAAa,CAACjB,QAAQ,CAAC,IAAIkB,WAAW,CAAClB,QAAQ,CAAC,EAAE;MACzDI,QAAQ,GAAGN,QAAQ;MACnB,IAAIoB,WAAW,CAACpB,QAAQ,CAAC,EAAE;QACzBM,QAAQ,GAAGe,aAAa,CAACrB,QAAQ,CAAC;MAC1C,CAAO,MACI,IAAI,CAACsB,QAAQ,CAACtB,QAAQ,CAAC,IAAIuB,UAAU,CAACvB,QAAQ,CAAC,EAAE;QACpDM,QAAQ,GAAGkB,eAAe,CAACtB,QAAQ,CAAC;MAC5C;IACA,CAAK,MACI;MACHM,QAAQ,GAAG,KAAK;IACtB;EACA;EACE,IAAIA,QAAQ,EAAE;IAChB;IACIT,KAAK,CAAC0B,GAAG,CAACvB,QAAQ,EAAEI,QAAQ,CAAC;IAC7BT,SAAS,CAACS,QAAQ,EAAEJ,QAAQ,EAAEN,QAAQ,EAAEE,UAAU,EAAEC,KAAK,CAAC;IAC1DA,KAAK,CAAC,QAAQ,CAAC,CAACG,QAAQ,CAAC;EAC7B;EACEG,gBAAgB,CAACZ,MAAM,EAAEE,GAAG,EAAEW,QAAQ,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}