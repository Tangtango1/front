{"ast":null,"code":"import arrayFilter from './_arrayFilter.mjs';\nimport arrayMap from './_arrayMap.mjs';\nimport baseProperty from './_baseProperty.mjs';\nimport baseTimes from './_baseTimes.mjs';\nimport isArrayLikeObject from './isArrayLikeObject.mjs';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function (group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function (index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\nexport { unzip as default };","map":{"version":3,"names":["nativeMax","Math","max","unzip","array","length","arrayFilter","group","isArrayLikeObject","baseTimes","index","arrayMap","baseProperty"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/unzip.js"],"sourcesContent":["import arrayFilter from './_arrayFilter.js';\nimport arrayMap from './_arrayMap.js';\nimport baseProperty from './_baseProperty.js';\nimport baseTimes from './_baseTimes.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function(group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function(index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\nexport default unzip;\n"],"mappings":";;;;;;AAMA;AACA,IAAIA,SAAS,GAAGC,IAAI,CAACC,GAAG;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,IAAI,EAAEA,KAAK,IAAIA,KAAK,CAACC,MAAM,CAAC,EAAE;IAC5B,OAAO,EAAE;EACb;EACE,IAAIA,MAAM,GAAG,CAAC;EACdD,KAAK,GAAGE,WAAW,CAACF,KAAK,EAAE,UAASG,KAAK,EAAE;IACzC,IAAIC,iBAAiB,CAACD,KAAK,CAAC,EAAE;MAC5BF,MAAM,GAAGL,SAAS,CAACO,KAAK,CAACF,MAAM,EAAEA,MAAM,CAAC;MACxC,OAAO,IAAI;IACjB;EACA,CAAG,CAAC;EACF,OAAOI,SAAS,CAACJ,MAAM,EAAE,UAASK,KAAK,EAAE;IACvC,OAAOC,QAAQ,CAACP,KAAK,EAAEQ,YAAY,CAACF,KAAK,CAAC,CAAC;EAC/C,CAAG,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}