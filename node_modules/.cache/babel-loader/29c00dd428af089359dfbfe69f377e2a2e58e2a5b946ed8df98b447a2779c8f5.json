{"ast":null,"code":"import { login } from '@/api/user';\nimport { setToken } from '@/utils/auth';\nimport menu from '@/utils/menu';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: '',\n        role: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      loading: false,\n      roleOptions: []\n    };\n  },\n  created() {\n    this.initRoleOptions();\n  },\n  methods: {\n    initRoleOptions() {\n      this.roleOptions = menu.list().filter(item => item.hasBackLogin === '是').map(item => ({\n        key: item.roleName,\n        value: item.tableName\n      }));\n      if (this.roleOptions.length > 0) {\n        this.loginForm.role = this.roleOptions[0].value;\n      }\n    },\n    async handleLogin() {\n      try {\n        await this.$refs.loginForm.validate();\n        this.loading = true;\n        const {\n          code,\n          data,\n          msg\n        } = await login({\n          table: this.loginForm.role,\n          username: this.loginForm.username,\n          password: this.loginForm.password\n        });\n        if (code === 0) {\n          setToken(data.token);\n          this.$router.push('/');\n          this.$message.success('登录成功');\n        } else {\n          this.$message.error(msg || '登录失败');\n        }\n      } catch (error) {\n        if (error.response) {\n          // 处理HTTP错误\n          const {\n            status,\n            data\n          } = error.response;\n          if (status === 500) {\n            this.$message.error('服务器内部错误，请稍后再试');\n          } else {\n            this.$message.error(data.msg || `请求错误: ${status}`);\n          }\n        } else {\n          // 处理网络错误\n          this.$message.error('网络连接异常，请检查网络');\n        }\n        console.error('登录错误:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleRegister(type) {\n      this.$router.push(`/register?type=${type}`);\n    }\n  }\n};","map":{"version":3,"names":["login","setToken","menu","name","data","loginForm","username","password","role","rules","required","message","trigger","loading","roleOptions","created","initRoleOptions","methods","list","filter","item","hasBackLogin","map","key","roleName","value","tableName","length","handleLogin","$refs","validate","code","msg","table","token","$router","push","$message","success","error","response","status","console","handleRegister","type"],"sources":["D:\\bise\\bise\\front\\src\\views\\login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <el-form class=\"login-form\" :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\">\n        <h3 class=\"title\">校园食堂订餐系统</h3>\n        \n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            prefix-icon=\"el-icon-user\"\n            placeholder=\"用户名\"\n            @keyup.enter.native=\"handleLogin\"\n          />\n        </el-form-item>\n\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            prefix-icon=\"el-icon-lock\"\n            placeholder=\"密码\"\n            @keyup.enter.native=\"handleLogin\"\n          />\n        </el-form-item>\n\n        <el-form-item v-if=\"roleOptions.length > 1\" class=\"role-selector\">\n          <el-radio-group v-model=\"loginForm.role\">\n            <el-radio\n              v-for=\"item in roleOptions\"\n              :key=\"item.value\"\n              :label=\"item.value\"\n            >\n              {{ item.key }}\n            </el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <el-button\n          type=\"primary\"\n          class=\"login-btn\"\n          :loading=\"loading\"\n          @click.native.prevent=\"handleLogin\"\n        >\n          登录\n        </el-button>\n\n        <div class=\"footer-links\">\n          <span @click=\"handleRegister('yonghu')\">用户注册</span>\n          <span @click=\"handleRegister('shangjia')\">商家注册</span>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { login } from '@/api/user'\nimport { setToken } from '@/utils/auth'\nimport menu from '@/utils/menu'\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: '',\n        role: ''\n      },\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      },\n      loading: false,\n      roleOptions: []\n    }\n  },\n  created() {\n    this.initRoleOptions()\n  },\n  methods: {\n    initRoleOptions() {\n      this.roleOptions = menu.list()\n        .filter(item => item.hasBackLogin === '是')\n        .map(item => ({\n          key: item.roleName,\n          value: item.tableName\n        }))\n      \n      if (this.roleOptions.length > 0) {\n        this.loginForm.role = this.roleOptions[0].value\n      }\n    },\n    \n    async handleLogin() {\n      try {\n        await this.$refs.loginForm.validate()\n        \n        this.loading = true\n        const { code, data, msg } = await login({\n          table: this.loginForm.role,\n          username: this.loginForm.username,\n          password: this.loginForm.password\n        })\n\n        if (code === 0) {\n          setToken(data.token)\n          this.$router.push('/')\n          this.$message.success('登录成功')\n        } else {\n          this.$message.error(msg || '登录失败')\n        }\n      } catch (error) {\n        if (error.response) {\n          // 处理HTTP错误\n          const { status, data } = error.response\n          if (status === 500) {\n            this.$message.error('服务器内部错误，请稍后再试')\n          } else {\n            this.$message.error(data.msg || `请求错误: ${status}`)\n          }\n        } else {\n          // 处理网络错误\n          this.$message.error('网络连接异常，请检查网络')\n        }\n        console.error('登录错误:', error)\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    handleRegister(type) {\n      this.$router.push(`/register?type=${type}`)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.loginIn {\n  min-height: 100vh;\n  position: relative;\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n  background-image: url('~@/assets/img/bg.jpg');\n\n  .loginInBt {\n    width: 85px;\n    height: 500px;\n    line-height: 500px;\n    margin: -374px 0 0 723px;\n    padding: 0;\n    color: rgba(255, 255, 255, 1);\n    font-size: 30px;\n    border-radius: 4px;\n    border-width: 0;\n    border-style: solid;\n    border-color: rgba(64, 158, 255, 1);\n    background-color: var(--publicMainColor);\n    box-shadow: 0 0 6px rgba(255, 0, 0, 0.1);\n  }\n  .register {\n    width: 60px;\n    height: 24px;\n    line-height: 24px;\n    margin: -100px 0 0 115px;\n    padding: 0;\n    color: var(--publicMainColor);\n    font-size: 14px;\n    border-radius: 0;\n    border-width: 0;\n    border-style: solid;\n    border-color: rgba(64, 158, 255, 1);\n    background-color: rgba(255, 255, 255, 0);\n    box-shadow: 0 0 6px rgba(255, 0, 0, 0);\n    cursor: pointer;\n  }\n  .reset {\n    width: auto;\n    height: 24px;\n    line-height: 24px;\n    margin: -50px 50px 0 0;\n    padding: 0;\n    color: var(--publicMainColor);\n    font-size: 12px;\n    border-radius: 0;\n    border-width: 0;\n    border-style: solid;\n    border-color: rgba(64, 158, 255, 1);\n    background-color: rgba(255, 255, 255, 0);\n    box-shadow: 0 0 6px rgba(255, 0, 0, 0);\n  }\n\n  .left {\n    position: absolute;\n    left: 0;\n    top: 0;\n    box-sizing: border-box;\n    width: 850px;\n    height: 500px;\n    margin: 0;\n    padding: 0 0px;\n    border-radius: 30px;\n    border-width: 0;\n    border-style: solid;\n    border-color: rgba(0, 0, 0, 0.3);\n    background-color: rgba(255, 255, 255, 0.8);\n    box-shadow: 0 0 0px rgba(30, 144, 255, 0.8);\n\n    .login-form {\n      background-color: transparent;\n      width: 100%;\n      right: inherit;\n      padding: 0;\n      box-sizing: border-box;\n      display: flex;\n      position: initial;\n      justify-content: center;\n      flex-direction: column;\n    }\n\n    .title-container {\n      text-align: center;\n      font-size: 24px;\n\n      .title {\n        width: 100%;\n        line-height: 80px;\n        margin: 147px auto 60px;\n        padding: 0;\n        color: rgba(255, 255, 255, 1);\n        font-size: 28px;\n        border-radius: 0;\n        border-width: 0;\n        border-style: solid;\n        border-color: rgba(0, 0, 0, 0.3);\n        background-color: var(--publicMainColor);\n        box-shadow: 0 0 6px rgba(0, 0, 0, 0);\n      }\n    }\n\n    .el-form-item {\n      position: relative;\n\n      :deep(.el-form-item__content)  {\n        line-height: initial;\n      }\n\n      :deep(.el-radio__label)  {\n        width: auto;\n        height: 14px;\n        line-height: 14px;\n        margin: 0;\n        padding: 0 0 0 10px;\n        color: rgba(30, 30, 30, 1);\n        font-size: 14px;\n        border-radius: 0;\n        border-width: 0;\n        border-style: solid;\n        border-color: rgba(255, 255, 255, 0);\n        background-color: rgba(255, 255, 255, 0);\n        box-shadow: 0 0 6px rgba(255, 0, 0, 0);\n        text-align: left;\n      }\n      :deep(.el-radio.is-checked .el-radio__label)  {\n        width: auto;\n        height: 14px;\n        line-height: 14px;\n        margin: 0;\n        padding: 0 0 0 10px;\n        color: var(--publicMainColor);\n        font-size: 14px;\n        border-radius: 0;\n        border-width: 0;\n        border-style: solid;\n        border-color: rgba(255, 255, 255, 0);\n        background-color: rgba(255, 255, 255, 0);\n        box-shadow: 0 0 6px rgba(255, 0, 0, 0);\n        text-align: left;\n      }\n      :deep(.el-radio__inner)  {\n        width: 14px;\n        height: 14px;\n        margin: 0;\n        padding: 0;\n        border-radius: 100%;\n        border-width: 1px;\n        border-style: solid;\n        border-color: rgba(74, 74, 74, 1);\n        background-color: rgba(255, 255, 255, 1);\n        box-shadow: 0 0 6px rgba(255, 0, 0, 0);\n      }\n      :deep(.el-radio.is-checked .el-radio__inner)  {\n        width: 14px;\n        height: 14px;\n        margin: 0;\n        padding: 0;\n        border-radius: 100%;\n        border-width: 1px;\n        border-style: solid;\n        border-color: var(--publicMainColor);\n        background-color: var(--publicMainColor);\n        box-shadow: 0 0 6px rgba(255, 0, 0, 0);\n      }\n\n      .svg-container {\n        padding: 6px 5px 6px 15px;\n        color: #889aa4;\n        vertical-align: middle;\n        display: inline-block;\n        position: absolute;\n        left: 0;\n        top: 0;\n        z-index: 1;\n        padding: 0;\n        line-height: 40px;\n        width: 30px;\n        text-align: center;\n      }\n\n      .el-input {\n        display: inline-block;\n        // height: 40px;\n        width: 100%;\n\n        :deep(input)  {\n          background: transparent;\n          border: 0px;\n          -webkit-appearance: none;\n          padding: 0 15px 0 30px;\n          color: #fff;\n          height: 40px;\n\n          width: 100%;\n          height: 30px;\n          line-height: 30px;\n          margin: 0;\n          padding: 0 30px;\n          color: rgba(0, 0, 0, 1);\n          font-size: 16px;\n          border-radius: 0;\n          border-width: 0;\n          border-style: solid;\n          border-color: rgba(0, 0, 0, 0);\n          background-color: rgba(0, 0, 0, 0);\n          box-shadow: 0 0 6px rgba(255, 0, 0, 0);\n        }\n      }\n    }\n  }\n\n  .center {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate3d(-50%, -50%, 0);\n  }\n\n  .right {\n    position: absolute;\n    left: inherit;\n    right: 0;\n    top: 0;\n  }\n\n  .code {\n    .el-form-item__content {\n      position: relative;\n\n      .getCodeBt {\n        position: absolute;\n        right: 0;\n        top: 50%;\n        transform: translate3d(0, -50%, 0);\n        line-height: 40px;\n        width: 100px;\n        background-color: rgba(51, 51, 51, 0.4);\n        color: #fff;\n        text-align: center;\n        border-radius: 0 4px 4px 0;\n        height: 40px;\n        overflow: hidden;\n        padding: 0;\n        margin: 0;\n        width: 100px;\n        height: 30px;\n        line-height: 30px;\n        border-radius: 0;\n        border-width: 0;\n        border-style: solid;\n        border-color: rgba(64, 158, 255, 1);\n        background-color: rgba(51, 51, 51, 0.4);\n        box-shadow: 0 0 6px rgba(255, 0, 0, 0);\n\n        span {\n          padding: 0 5px;\n          display: inline-block;\n          font-size: 16px;\n          font-weight: 600;\n        }\n      }\n\n      .el-input {\n        :deepinput()  {\n          padding: 0 130px 0 30px;\n        }\n      }\n    }\n  }\n\n  .setting {\n    :deep(.el-form-item__content)  {\n      // padding: 0 15px;\n      box-sizing: border-box;\n      line-height: 32px;\n      height: 32px;\n      font-size: 14px;\n      color: #999;\n      margin: 0 !important;\n      display: flex;\n\n      .register {\n        // float: left;\n        // width: 50%;\n        text-align: center;\n      }\n\n      .reset {\n        float: right;\n        width: 50%;\n        text-align: right;\n      }\n    }\n  }\n\n  .style2 {\n    padding-left: 30px;\n\n    .svg-container {\n      left: -30px !important;\n    }\n\n    .el-input {\n      :deep(input)  {\n        padding: 0 15px !important;\n      }\n    }\n  }\n\n  .code.style2,\n  .code.style3 {\n    .el-input {\n      :deep(input)  {\n        padding: 0 115px 0 15px;\n      }\n    }\n  }\n\n  .style3 {\n    :deep(.el-form-item__label)  {\n      padding-right: 6px;\n      height: 30px;\n      line-height: 30px;\n    }\n\n    .el-input {\n      :deep(input)  {\n        padding: 0 15px !important;\n      }\n    }\n  }\n\n  :deep(.el-form-item__label)  {\n    width: 30px;\n    height: 30px;\n    line-height: 30px;\n    margin: 0;\n    padding: 0;\n    color: var(--publicMainColor);\n    font-size: 14px;\n    border-radius: 0;\n    border-width: 0;\n    border-style: solid;\n    border-color: rgba(0, 0, 0, 0);\n    background-color: rgba(0, 0, 0, 0);\n    box-shadow: 0 0 6px rgba(0, 0, 0, 0);\n  }\n\n  .role {\n    :deep(.el-form-item__label)  {\n      width: 56px !important;\n      height: 38px;\n      line-height: 38px;\n      margin: 0 0 0 150px;\n      padding: 0;\n      color: var(--publicMainColor);\n      font-size: 14px;\n      border-radius: 0;\n      border-width: 0;\n      border-style: solid;\n      border-color: rgba(64, 158, 255, 1);\n      background-color: rgba(255, 255, 255, 0);\n      box-shadow: 0 0 6px rgba(255, 0, 0, 0);\n      text-align: left;\n    }\n\n    :deep(.el-radio)  {\n      margin-right: 12px;\n    }\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}