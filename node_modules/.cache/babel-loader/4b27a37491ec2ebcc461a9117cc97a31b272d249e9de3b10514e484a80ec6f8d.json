{"ast":null,"code":"import arrayEach from './_arrayEach.mjs';\nimport baseAssignValue from './_baseAssignValue.mjs';\nimport bind from './bind.mjs';\nimport flatRest from './_flatRest.mjs';\nimport toKey from './_toKey.mjs';\n\n/**\n * Binds methods of an object to the object itself, overwriting the existing\n * method.\n *\n * **Note:** This method doesn't set the \"length\" property of bound functions.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Object} object The object to bind and assign the bound methods to.\n * @param {...(string|string[])} methodNames The object method names to bind.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var view = {\n *   'label': 'docs',\n *   'click': function() {\n *     console.log('clicked ' + this.label);\n *   }\n * };\n *\n * _.bindAll(view, ['click']);\n * jQuery(element).on('click', view.click);\n * // => Logs 'clicked docs' when clicked.\n */\nvar bindAll = flatRest(function (object, methodNames) {\n  arrayEach(methodNames, function (key) {\n    key = toKey(key);\n    baseAssignValue(object, key, bind(object[key], object));\n  });\n  return object;\n});\nexport { bindAll as default };","map":{"version":3,"names":["bindAll","flatRest","object","methodNames","arrayEach","key","toKey","baseAssignValue","bind"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/bindAll.js"],"sourcesContent":["import arrayEach from './_arrayEach.js';\nimport baseAssignValue from './_baseAssignValue.js';\nimport bind from './bind.js';\nimport flatRest from './_flatRest.js';\nimport toKey from './_toKey.js';\n\n/**\n * Binds methods of an object to the object itself, overwriting the existing\n * method.\n *\n * **Note:** This method doesn't set the \"length\" property of bound functions.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Object} object The object to bind and assign the bound methods to.\n * @param {...(string|string[])} methodNames The object method names to bind.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var view = {\n *   'label': 'docs',\n *   'click': function() {\n *     console.log('clicked ' + this.label);\n *   }\n * };\n *\n * _.bindAll(view, ['click']);\n * jQuery(element).on('click', view.click);\n * // => Logs 'clicked docs' when clicked.\n */\nvar bindAll = flatRest(function(object, methodNames) {\n  arrayEach(methodNames, function(key) {\n    key = toKey(key);\n    baseAssignValue(object, key, bind(object[key], object));\n  });\n  return object;\n});\n\nexport default bindAll;\n"],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,IAACA,OAAO,GAAGC,QAAQ,CAAC,UAASC,MAAM,EAAEC,WAAW,EAAE;EACnDC,SAAS,CAACD,WAAW,EAAE,UAASE,GAAG,EAAE;IACnCA,GAAG,GAAGC,KAAK,CAACD,GAAG,CAAC;IAChBE,eAAe,CAACL,MAAM,EAAEG,GAAG,EAAEG,IAAI,CAACN,MAAM,CAACG,GAAG,CAAC,EAAEH,MAAM,CAAC,CAAC;EAC3D,CAAG,CAAC;EACF,OAAOA,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}