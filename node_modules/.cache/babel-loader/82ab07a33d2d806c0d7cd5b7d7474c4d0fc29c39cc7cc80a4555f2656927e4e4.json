{"ast":null,"code":"import Stack from './_Stack.mjs';\nimport assignMergeValue from './_assignMergeValue.mjs';\nimport baseFor from './_baseFor.mjs';\nimport baseMergeDeep from './_baseMergeDeep.mjs';\nimport isObject from './isObject.mjs';\nimport keysIn from './keysIn.mjs';\nimport safeGet from './_safeGet.mjs';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function (srcValue, key) {\n    stack || (stack = new Stack());\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    } else {\n      var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\nexport { baseMerge as default };","map":{"version":3,"names":["baseMerge","object","source","srcIndex","customizer","stack","baseFor","srcValue","key","Stack","isObject","baseMergeDeep","newValue","safeGet","undefined","assignMergeValue","keysIn"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseMerge.js"],"sourcesContent":["import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n"],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAASA,CAACC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,KAAK,EAAE;EAC9D,IAAIJ,MAAM,KAAKC,MAAM,EAAE;IACrB;EACJ;EACEI,OAAO,CAACJ,MAAM,EAAE,UAASK,QAAQ,EAAEC,GAAG,EAAE;IACtCH,KAAK,KAAKA,KAAK,GAAG,IAAII,KAAK,CAAL,CAAK,CAAC;IAC5B,IAAIC,QAAQ,CAACH,QAAQ,CAAC,EAAE;MACtBI,aAAa,CAACV,MAAM,EAAEC,MAAM,EAAEM,GAAG,EAAEL,QAAQ,EAAEH,SAAS,EAAEI,UAAU,EAAEC,KAAK,CAAC;IAChF,CAAK,MACI;MACH,IAAIO,QAAQ,GAAGR,UAAU,GACrBA,UAAU,CAACS,OAAO,CAACZ,MAAM,EAAEO,GAAG,CAAC,EAAED,QAAQ,EAAGC,GAAG,GAAG,EAAE,EAAGP,MAAM,EAAEC,MAAM,EAAEG,KAAK,CAAC,GAC7ES,SAAS;MAEb,IAAIF,QAAQ,KAAKE,SAAS,EAAE;QAC1BF,QAAQ,GAAGL,QAAQ;MAC3B;MACMQ,gBAAgB,CAACd,MAAM,EAAEO,GAAG,EAAEI,QAAQ,CAAC;IAC7C;EACA,CAAG,EAAEI,MAAM,CAAC;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}