{"ast":null,"code":"import DataView from './_DataView.mjs';\nimport Map from './_Map.mjs';\nimport Promise$1 from './_Promise.mjs';\nimport Set from './_Set.mjs';\nimport WeakMap from './_WeakMap.mjs';\nimport baseGetTag from './_baseGetTag.mjs';\nimport toSource from './_toSource.mjs';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n  objectTag = '[object Object]',\n  promiseTag = '[object Promise]',\n  setTag = '[object Set]',\n  weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n  mapCtorString = toSource(Map),\n  promiseCtorString = toSource(Promise$1),\n  setCtorString = toSource(Set),\n  weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise$1 && getTag(Promise$1.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function (value) {\n    var result = baseGetTag(value),\n      Ctor = result == objectTag ? value.constructor : undefined,\n      ctorString = Ctor ? toSource(Ctor) : '';\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n        case mapCtorString:\n          return mapTag;\n        case promiseCtorString:\n          return promiseTag;\n        case setCtorString:\n          return setTag;\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\nvar getTag$1 = getTag;\nexport { getTag$1 as default };","map":{"version":3,"names":["mapTag","objectTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","toSource","DataView","mapCtorString","Map","promiseCtorString","Promise$1","setCtorString","Set","weakMapCtorString","WeakMap","getTag","baseGetTag","ArrayBuffer","resolve","value","result","Ctor","constructor","undefined","ctorString","getTag$1"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getTag.js"],"sourcesContent":["import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n"],"mappings":";;;;;;;;AAQA;AACA,IAAIA,MAAM,GAAG,cAAc;EACvBC,SAAS,GAAG,iBAAiB;EAC7BC,UAAU,GAAG,kBAAkB;EAC/BC,MAAM,GAAG,cAAc;EACvBC,UAAU,GAAG,kBAAkB;AAEnC,IAAIC,WAAW,GAAG,mBAAmB;;AAErC;AACA,IAAIC,kBAAkB,GAAGC,QAAQ,CAACC,QAAQ,CAAC;EACvCC,aAAa,GAAGF,QAAQ,CAACG,GAAG,CAAC;EAC7BC,iBAAiB,GAAGJ,QAAQ,CAACK,SAAO,CAAC;EACrCC,aAAa,GAAGN,QAAQ,CAACO,GAAG,CAAC;EAC7BC,iBAAiB,GAAGR,QAAQ,CAACS,OAAO,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,MAAM,GAAGC,UAAU;;AAEvB;AACA,IAAKV,QAAQ,IAAIS,MAAM,CAAC,IAAIT,QAAQ,CAAC,IAAIW,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAId,WAAW,IACnEK,GAAG,IAAIO,MAAM,CAAC,IAAIP,GAAG,CAAH,CAAG,CAAC,IAAIV,MAAO,IACjCY,SAAO,IAAIK,MAAM,CAACL,SAAO,CAACQ,OAAO,EAAE,CAAC,IAAIlB,UAAW,IACnDY,GAAG,IAAIG,MAAM,CAAC,IAAIH,GAAG,CAAH,CAAG,CAAC,IAAIX,MAAO,IACjCa,OAAO,IAAIC,MAAM,CAAC,IAAID,OAAO,CAAP,CAAO,CAAC,IAAIZ,UAAW,EAAE;EAClDa,MAAM,GAAG,SAAAA,CAASI,KAAK,EAAE;IACvB,IAAIC,MAAM,GAAGJ,UAAU,CAACG,KAAK,CAAC;MAC1BE,IAAI,GAAGD,MAAM,IAAIrB,SAAS,GAAGoB,KAAK,CAACG,WAAW,GAAGC,SAAS;MAC1DC,UAAU,GAAGH,IAAI,GAAGhB,QAAQ,CAACgB,IAAI,CAAC,GAAG,EAAE;IAE3C,IAAIG,UAAU,EAAE;MACd,QAAQA,UAAU;QAChB,KAAKpB,kBAAkB;UAAE,OAAOD,WAAW;QAC3C,KAAKI,aAAa;UAAE,OAAOT,MAAM;QACjC,KAAKW,iBAAiB;UAAE,OAAOT,UAAU;QACzC,KAAKW,aAAa;UAAE,OAAOV,MAAM;QACjC,KAAKY,iBAAiB;UAAE,OAAOX,UAAU;MACjD;IACA;IACI,OAAOkB,MAAM;EACjB,CAAG;AACH;AAEA,IAAAK,QAAA,GAAeV,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}