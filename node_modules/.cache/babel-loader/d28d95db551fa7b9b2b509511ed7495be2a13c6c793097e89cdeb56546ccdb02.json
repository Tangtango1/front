{"ast":null,"code":"import axios from 'axios';\nimport router from '../router';\nimport storage from '@/utils/storage';\nconst http = axios.create({\n  baseURL: '/xiaoyuanshitangdingcan',\n  timeout: 1000 * 86400,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json; charset=utf-8'\n  }\n});\n\n// 请求拦截\nhttp.interceptors.request.use(config => {\n  const token = storage.get('Token');\n  if (token) {\n    config.headers['Token'] = token; // 关键点：与后端 LOGIN_TOKEN_KEY 一致\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// 响应拦截\nhttp.interceptors.response.use(response => {\n  if (response.data?.code === 401) {\n    handleUnauthorized();\n  }\n  return response.data;\n}, error => {\n  if (error.response?.status === 401) {\n    handleUnauthorized();\n  }\n  return Promise.reject(error);\n});\nconst handleUnauthorized = () => {\n  storage.remove('Token');\n  router.push({\n    name: 'login',\n    query: {\n      redirect: router.currentRoute.fullPath\n    }\n  });\n};\nexport default http;","map":{"version":3,"names":["axios","router","storage","http","create","baseURL","timeout","withCredentials","headers","interceptors","request","use","config","token","get","error","Promise","reject","response","data","code","handleUnauthorized","status","remove","push","name","query","redirect","currentRoute","fullPath"],"sources":["D:/bise/bise/front/src/utils/http.js"],"sourcesContent":["import axios from 'axios';\nimport router from '../router';\nimport storage from '@/utils/storage';\n\nconst http = axios.create({\n    baseURL: '/xiaoyuanshitangdingcan',\n    timeout: 1000 * 86400,\n    withCredentials: true,\n    headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n    }\n});\n\n// 请求拦截\nhttp.interceptors.request.use(config => {\n    const token = storage.get('Token');\n    if (token) {\n        config.headers['Token'] = token; // 关键点：与后端 LOGIN_TOKEN_KEY 一致\n    }\n    return config;\n}, error => Promise.reject(error));\n\n// 响应拦截\nhttp.interceptors.response.use(\n    response => {\n        if (response.data?.code === 401) {\n            handleUnauthorized();\n        }\n        return response.data;\n    },\n    error => {\n        if (error.response?.status === 401) {\n            handleUnauthorized();\n        }\n        return Promise.reject(error);\n    }\n);\n\nconst handleUnauthorized = () => {\n    storage.remove('Token');\n    router.push({\n        name: 'login',\n        query: { redirect: router.currentRoute.fullPath }\n    });\n};\n\nexport default http;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,OAAO,MAAM,iBAAiB;AAErC,MAAMC,IAAI,GAAGH,KAAK,CAACI,MAAM,CAAC;EACtBC,OAAO,EAAE,yBAAyB;EAClCC,OAAO,EAAE,IAAI,GAAG,KAAK;EACrBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAL,IAAI,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACpC,MAAMC,KAAK,GAAGX,OAAO,CAACY,GAAG,CAAC,OAAO,CAAC;EAClC,IAAID,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAAC,OAAO,CAAC,GAAGK,KAAK,CAAC,CAAC;EACrC;EACA,OAAOD,MAAM;AACjB,CAAC,EAAEG,KAAK,IAAIC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC;;AAElC;AACAZ,IAAI,CAACM,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BO,QAAQ,IAAI;EACR,IAAIA,QAAQ,CAACC,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;IAC7BC,kBAAkB,CAAC,CAAC;EACxB;EACA,OAAOH,QAAQ,CAACC,IAAI;AACxB,CAAC,EACDJ,KAAK,IAAI;EACL,IAAIA,KAAK,CAACG,QAAQ,EAAEI,MAAM,KAAK,GAAG,EAAE;IAChCD,kBAAkB,CAAC,CAAC;EACxB;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;EAC7BnB,OAAO,CAACqB,MAAM,CAAC,OAAO,CAAC;EACvBtB,MAAM,CAACuB,IAAI,CAAC;IACRC,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE;MAAEC,QAAQ,EAAE1B,MAAM,CAAC2B,YAAY,CAACC;IAAS;EACpD,CAAC,CAAC;AACN,CAAC;AAED,eAAe1B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}