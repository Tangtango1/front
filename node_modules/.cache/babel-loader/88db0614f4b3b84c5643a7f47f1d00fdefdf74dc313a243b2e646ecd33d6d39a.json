{"ast":null,"code":"import arrayEach from './_arrayEach.mjs';\nimport arrayPush from './_arrayPush.mjs';\nimport baseFunctions from './_baseFunctions.mjs';\nimport copyArray from './_copyArray.mjs';\nimport isFunction from './isFunction.mjs';\nimport isObject from './isObject.mjs';\nimport keys from './keys.mjs';\n\n/**\n * Adds all own enumerable string keyed function properties of a source\n * object to the destination object. If `object` is a function, then methods\n * are added to its prototype as well.\n *\n * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n * avoid conflicts caused by modifying the original.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Function|Object} [object=lodash] The destination object.\n * @param {Object} source The object of functions to add.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n * @returns {Function|Object} Returns `object`.\n * @example\n *\n * function vowels(string) {\n *   return _.filter(string, function(v) {\n *     return /[aeiou]/i.test(v);\n *   });\n * }\n *\n * _.mixin({ 'vowels': vowels });\n * _.vowels('fred');\n * // => ['e']\n *\n * _('fred').vowels().value();\n * // => ['e']\n *\n * _.mixin({ 'vowels': vowels }, { 'chain': false });\n * _('fred').vowels();\n * // => ['e']\n */\nfunction mixin(object, source, options) {\n  var props = keys(source),\n    methodNames = baseFunctions(source, props);\n  var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n    isFunc = isFunction(object);\n  arrayEach(methodNames, function (methodName) {\n    var func = source[methodName];\n    object[methodName] = func;\n    if (isFunc) {\n      object.prototype[methodName] = function () {\n        var chainAll = this.__chain__;\n        if (chain || chainAll) {\n          var result = object(this.__wrapped__),\n            actions = result.__actions__ = copyArray(this.__actions__);\n          actions.push({\n            'func': func,\n            'args': arguments,\n            'thisArg': object\n          });\n          result.__chain__ = chainAll;\n          return result;\n        }\n        return func.apply(object, arrayPush([this.value()], arguments));\n      };\n    }\n  });\n  return object;\n}\nexport { mixin as default };","map":{"version":3,"names":["mixin","object","source","options","props","keys","methodNames","baseFunctions","chain","isObject","isFunc","isFunction","arrayEach","methodName","func","prototype","chainAll","__chain__","result","__wrapped__","actions","__actions__","copyArray","push","arguments","apply","arrayPush","value"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/mixin.js"],"sourcesContent":["import arrayEach from './_arrayEach.js';\nimport arrayPush from './_arrayPush.js';\nimport baseFunctions from './_baseFunctions.js';\nimport copyArray from './_copyArray.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport keys from './keys.js';\n\n/**\n * Adds all own enumerable string keyed function properties of a source\n * object to the destination object. If `object` is a function, then methods\n * are added to its prototype as well.\n *\n * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n * avoid conflicts caused by modifying the original.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Function|Object} [object=lodash] The destination object.\n * @param {Object} source The object of functions to add.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n * @returns {Function|Object} Returns `object`.\n * @example\n *\n * function vowels(string) {\n *   return _.filter(string, function(v) {\n *     return /[aeiou]/i.test(v);\n *   });\n * }\n *\n * _.mixin({ 'vowels': vowels });\n * _.vowels('fred');\n * // => ['e']\n *\n * _('fred').vowels().value();\n * // => ['e']\n *\n * _.mixin({ 'vowels': vowels }, { 'chain': false });\n * _('fred').vowels();\n * // => ['e']\n */\nfunction mixin(object, source, options) {\n  var props = keys(source),\n      methodNames = baseFunctions(source, props);\n\n  var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n      isFunc = isFunction(object);\n\n  arrayEach(methodNames, function(methodName) {\n    var func = source[methodName];\n    object[methodName] = func;\n    if (isFunc) {\n      object.prototype[methodName] = function() {\n        var chainAll = this.__chain__;\n        if (chain || chainAll) {\n          var result = object(this.__wrapped__),\n              actions = result.__actions__ = copyArray(this.__actions__);\n\n          actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n          result.__chain__ = chainAll;\n          return result;\n        }\n        return func.apply(object, arrayPush([this.value()], arguments));\n      };\n    }\n  });\n\n  return object;\n}\n\nexport default mixin;\n"],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAKA,CAACC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACtC,IAAIC,KAAK,GAAGC,IAAI,CAACH,MAAM,CAAC;IACpBI,WAAW,GAAGC,aAAa,CAACL,MAAM,EAAEE,KAAK,CAAC;EAE9C,IAAII,KAAK,GAAG,EAAEC,QAAQ,CAACN,OAAO,CAAC,IAAI,OAAO,IAAIA,OAAO,CAAC,IAAI,CAAC,CAACA,OAAO,CAACK,KAAK;IACrEE,MAAM,GAAGC,UAAU,CAACV,MAAM,CAAC;EAE/BW,SAAS,CAACN,WAAW,EAAE,UAASO,UAAU,EAAE;IAC1C,IAAIC,IAAI,GAAGZ,MAAM,CAACW,UAAU,CAAC;IAC7BZ,MAAM,CAACY,UAAU,CAAC,GAAGC,IAAI;IACzB,IAAIJ,MAAM,EAAE;MACVT,MAAM,CAACc,SAAS,CAACF,UAAU,CAAC,GAAG,YAAW;QACxC,IAAIG,QAAQ,GAAG,IAAI,CAACC,SAAS;QAC7B,IAAIT,KAAK,IAAIQ,QAAQ,EAAE;UACrB,IAAIE,MAAM,GAAGjB,MAAM,CAAC,IAAI,CAACkB,WAAW,CAAC;YACjCC,OAAO,GAAGF,MAAM,CAACG,WAAW,GAAGC,SAAS,CAAC,IAAI,CAACD,WAAW,CAAC;UAE9DD,OAAO,CAACG,IAAI,CAAC;YAAE,MAAM,EAAET,IAAI;YAAE,MAAM,EAAEU,SAAS;YAAE,SAAS,EAAEvB;UAAM,CAAE,CAAC;UACpEiB,MAAM,CAACD,SAAS,GAAGD,QAAQ;UAC3B,OAAOE,MAAM;QACvB;QACQ,OAAOJ,IAAI,CAACW,KAAK,CAACxB,MAAM,EAAEyB,SAAS,CAAC,CAAC,IAAI,CAACC,KAAK,EAAE,CAAC,EAAEH,SAAS,CAAC,CAAC;MACvE,CAAO;IACP;EACA,CAAG,CAAC;EAEF,OAAOvB,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}