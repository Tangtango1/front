{"ast":null,"code":"import arrayMap from './_arrayMap.mjs';\nimport baseIndexOf from './_baseIndexOf.mjs';\nimport baseIndexOfWith from './_baseIndexOfWith.mjs';\nimport baseUnary from './_baseUnary.mjs';\nimport copyArray from './_copyArray.mjs';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n    index = -1,\n    length = values.length,\n    seen = array;\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n      value = values[index],\n      computed = iteratee ? iteratee(value) : value;\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\nexport { basePullAll as default };","map":{"version":3,"names":["arrayProto","Array","prototype","splice","basePullAll","array","values","iteratee","comparator","indexOf","baseIndexOfWith","baseIndexOf","index","length","seen","copyArray","arrayMap","baseUnary","fromIndex","value","computed","call"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_basePullAll.js"],"sourcesContent":["import arrayMap from './_arrayMap.js';\nimport baseIndexOf from './_baseIndexOf.js';\nimport baseIndexOfWith from './_baseIndexOfWith.js';\nimport baseUnary from './_baseUnary.js';\nimport copyArray from './_copyArray.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nexport default basePullAll;\n"],"mappings":";;;;;;AAMA;AACA,IAAIA,UAAU,GAAGC,KAAK,CAACC,SAAS;;AAEhC;AACA,IAAIC,MAAM,GAAGH,UAAU,CAACG,MAAM;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EACxD,IAAIC,OAAO,GAAGD,UAAU,GAAGE,eAAe,GAAGC,WAAW;IACpDC,KAAK,GAAG,CAAC,CAAC;IACVC,MAAM,GAAGP,MAAM,CAACO,MAAM;IACtBC,IAAI,GAAGT,KAAK;EAEhB,IAAIA,KAAK,KAAKC,MAAM,EAAE;IACpBA,MAAM,GAAGS,SAAS,CAACT,MAAM,CAAC;EAC9B;EACE,IAAIC,QAAQ,EAAE;IACZO,IAAI,GAAGE,QAAQ,CAACX,KAAK,EAAEY,SAAS,CAACV,QAAQ,CAAC,CAAC;EAC/C;EACE,OAAO,EAAEK,KAAK,GAAGC,MAAM,EAAE;IACvB,IAAIK,SAAS,GAAG,CAAC;MACbC,KAAK,GAAGb,MAAM,CAACM,KAAK,CAAC;MACrBQ,QAAQ,GAAGb,QAAQ,GAAGA,QAAQ,CAACY,KAAK,CAAC,GAAGA,KAAK;IAEjD,OAAO,CAACD,SAAS,GAAGT,OAAO,CAACK,IAAI,EAAEM,QAAQ,EAAEF,SAAS,EAAEV,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE;MACxE,IAAIM,IAAI,KAAKT,KAAK,EAAE;QAClBF,MAAM,CAACkB,IAAI,CAACP,IAAI,EAAEI,SAAS,EAAE,CAAC,CAAC;MACvC;MACMf,MAAM,CAACkB,IAAI,CAAChB,KAAK,EAAEa,SAAS,EAAE,CAAC,CAAC;IACtC;EACA;EACE,OAAOb,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}