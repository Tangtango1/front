{"ast":null,"code":"import arrayMap from './_arrayMap.mjs';\nimport baseAt from './_baseAt.mjs';\nimport basePullAt from './_basePullAt.mjs';\nimport compareAscending from './_compareAscending.mjs';\nimport flatRest from './_flatRest.mjs';\nimport isIndex from './_isIndex.mjs';\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n * var pulled = _.pullAt(array, [1, 3]);\n *\n * console.log(array);\n * // => ['a', 'c']\n *\n * console.log(pulled);\n * // => ['b', 'd']\n */\nvar pullAt = flatRest(function (array, indexes) {\n  var length = array == null ? 0 : array.length,\n    result = baseAt(array, indexes);\n  basePullAt(array, arrayMap(indexes, function (index) {\n    return isIndex(index, length) ? +index : index;\n  }).sort(compareAscending));\n  return result;\n});\nexport { pullAt as default };","map":{"version":3,"names":["pullAt","flatRest","array","indexes","length","result","baseAt","basePullAt","arrayMap","index","isIndex","sort","compareAscending"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/pullAt.js"],"sourcesContent":["import arrayMap from './_arrayMap.js';\nimport baseAt from './_baseAt.js';\nimport basePullAt from './_basePullAt.js';\nimport compareAscending from './_compareAscending.js';\nimport flatRest from './_flatRest.js';\nimport isIndex from './_isIndex.js';\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n * var pulled = _.pullAt(array, [1, 3]);\n *\n * console.log(array);\n * // => ['a', 'c']\n *\n * console.log(pulled);\n * // => ['b', 'd']\n */\nvar pullAt = flatRest(function(array, indexes) {\n  var length = array == null ? 0 : array.length,\n      result = baseAt(array, indexes);\n\n  basePullAt(array, arrayMap(indexes, function(index) {\n    return isIndex(index, length) ? +index : index;\n  }).sort(compareAscending));\n\n  return result;\n});\n\nexport default pullAt;\n"],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,IAACA,MAAM,GAAGC,QAAQ,CAAC,UAASC,KAAK,EAAEC,OAAO,EAAE;EAC7C,IAAIC,MAAM,GAAGF,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGA,KAAK,CAACE,MAAM;IACzCC,MAAM,GAAGC,MAAM,CAACJ,KAAK,EAAEC,OAAO,CAAC;EAEnCI,UAAU,CAACL,KAAK,EAAEM,QAAQ,CAACL,OAAO,EAAE,UAASM,KAAK,EAAE;IAClD,OAAOC,OAAO,CAACD,KAAK,EAAEL,MAAM,CAAC,GAAG,CAACK,KAAK,GAAGA,KAAK;EAClD,CAAG,CAAC,CAACE,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAE1B,OAAOP,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}