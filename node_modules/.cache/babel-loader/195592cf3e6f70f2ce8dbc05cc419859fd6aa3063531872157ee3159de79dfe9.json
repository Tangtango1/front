{"ast":null,"code":"import Symbol from './_Symbol.mjs';\nimport copyArray from './_copyArray.mjs';\nimport getTag from './_getTag.mjs';\nimport isArrayLike from './isArrayLike.mjs';\nimport isString from './isString.mjs';\nimport iteratorToArray from './_iteratorToArray.mjs';\nimport mapToArray from './_mapToArray.mjs';\nimport setToArray from './_setToArray.mjs';\nimport stringToArray from './_stringToArray.mjs';\nimport values from './values.mjs';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n  setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n    func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;\n  return func(value);\n}\nexport { toArray as default };","map":{"version":3,"names":["mapTag","setTag","symIterator","Symbol","iterator","undefined","toArray","value","isArrayLike","isString","stringToArray","copyArray","iteratorToArray","tag","getTag","func","mapToArray","setToArray","values"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/toArray.js"],"sourcesContent":["import Symbol from './_Symbol.js';\nimport copyArray from './_copyArray.js';\nimport getTag from './_getTag.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport iteratorToArray from './_iteratorToArray.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\nimport stringToArray from './_stringToArray.js';\nimport values from './values.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nexport default toArray;\n"],"mappings":";;;;;;;;;;;AAWA;AACA,IAAIA,MAAM,GAAG,cAAc;EACvBC,MAAM,GAAG,cAAc;;AAE3B;AACA,IAAIC,WAAW,GAAGC,MAAM,GAAGA,MAAM,CAACC,QAAQ,GAAGC,SAAS;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACC,KAAK,EAAE;EACtB,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,EAAE;EACb;EACE,IAAIC,WAAW,CAACD,KAAK,CAAC,EAAE;IACtB,OAAOE,QAAQ,CAACF,KAAK,CAAC,GAAGG,aAAa,CAACH,KAAK,CAAC,GAAGI,SAAS,CAACJ,KAAK,CAAC;EACpE;EACE,IAAIL,WAAW,IAAIK,KAAK,CAACL,WAAW,CAAC,EAAE;IACrC,OAAOU,eAAe,CAACL,KAAK,CAACL,WAAW,CAAC,EAAE,CAAC;EAChD;EACE,IAAIW,GAAG,GAAGC,MAAM,CAACP,KAAK,CAAC;IACnBQ,IAAI,GAAGF,GAAG,IAAIb,MAAM,GAAGgB,UAAU,GAAIH,GAAG,IAAIZ,MAAM,GAAGgB,UAAU,GAAGC,MAAO;EAE7E,OAAOH,IAAI,CAACR,KAAK,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}