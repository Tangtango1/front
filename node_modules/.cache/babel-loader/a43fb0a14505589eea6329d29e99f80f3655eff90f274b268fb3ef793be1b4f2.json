{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { registerMixin } from '@vuemap/vue-amap-util';\nvar script = defineComponent({\n  name: \"ElAmapInfoWindow\",\n  mixins: [registerMixin],\n  props: {\n    isCustom: {\n      type: Boolean,\n      default: false\n    },\n    autoMove: {\n      type: Boolean,\n      default: true\n    },\n    avoid: {\n      type: Array\n    },\n    closeWhenClickMap: {\n      type: Boolean,\n      default: false\n    },\n    content: {\n      type: [String, Object]\n    },\n    size: {\n      type: Array\n    },\n    anchor: {\n      type: String\n    },\n    offset: {\n      type: Array\n    },\n    position: {\n      type: Array\n    }\n  },\n  emits: [\"update:visible\"],\n  data() {\n    return {\n      converters: {}\n    };\n  },\n  unmounted() {\n    if (this.$amapComponent) {\n      this.$amapComponent.close();\n    }\n  },\n  updated() {\n    if (!this.content && this.$amapComponent) {\n      this.$amapComponent.setContent(this.$refs.info);\n    }\n  },\n  methods: {\n    __initComponent(options) {\n      if (!options.content) {\n        options.content = this.getSlotContent();\n      }\n      this.$amapComponent = new AMap.InfoWindow(options);\n      this.$amapComponent.on(\"close\", () => {\n        this.$emit(\"update:visible\", false);\n      });\n      if (this.visible !== false) {\n        this.$amapComponent.open(this.$parentComponent, this.position);\n      }\n      if (!this.content && this.$amapComponent) {\n        const config = {\n          attributes: true,\n          childList: true,\n          subtree: true\n        };\n        const observer = new MutationObserver(() => {\n          this.$amapComponent.setContent(this.getSlotContent());\n        });\n        observer.observe(this.$refs.info, config);\n        this.observer = observer;\n      }\n    },\n    getSlotContent() {\n      return this.$refs.info;\n    },\n    destroyComponent() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      }\n      if (this.$amapComponent) {\n        if (this.$amapComponent.getIsOpen()) {\n          this.$amapComponent.close();\n        }\n        this.$amapComponent = null;\n        this.$parentComponent = null;\n      }\n    },\n    __position(position) {\n      if (this.visible) {\n        this.$amapComponent.open(this.$parentComponent, position);\n      } else {\n        this.$amapComponent.setPosition(position);\n      }\n    },\n    __visible(flag) {\n      const position = this.$amapComponent.getPosition();\n      if (position) {\n        flag === false ? this.$amapComponent.close() : this.$amapComponent.open(this.$parentComponent, [position.lng, position.lat]);\n      }\n    }\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","mixins","registerMixin","props","isCustom","type","Boolean","default","autoMove","avoid","Array","closeWhenClickMap","content","String","Object","size","anchor","offset","position","emits","data","converters","unmounted","$amapComponent","close","updated","setContent","$refs","info","methods","__initComponent","options","getSlotContent","AMap","InfoWindow","on","$emit","visible","open","$parentComponent","config","attributes","childList","subtree","observer","MutationObserver","observe","destroyComponent","disconnect","getIsOpen","__position","setPosition","__visible","flag","getPosition","lng","lat"],"sources":["../../../../packages/infoWindow/InfoWindow/InfoWindow.vue"],"sourcesContent":["<template>\r\n  <div style=\"display: none;\">\r\n    <div ref=\"info\">\r\n      <slot />\r\n    </div>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {defineComponent} from 'vue';\r\nimport {registerMixin} from '@vuemap/vue-amap-util';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapInfoWindow',\r\n  mixins: [registerMixin],\r\n  props: {\r\n    isCustom: {\r\n      type: Boolean,\r\n      default: false\r\n    }, // 是否自定义窗体。设为true时，信息窗体外框及内容完全按照content所设的值添加（默认为false，即在系统默认的信息窗体外框中显示content内容）\r\n    autoMove: {\r\n      type: Boolean,\r\n      default: true\r\n    }, // 是否自动调整窗体到视野内（当信息窗体超出视野范围时，通过该属性设置是否自动平移地图，使信息窗体完全显示）\r\n    avoid: {\r\n      type: Array\r\n    }, // autoMove 为 true 时，自动平移到视野内后的上右下左的避让宽度。默认值： [20, 20, 20, 20]\r\n    closeWhenClickMap: {\r\n      type: Boolean,\r\n      default: false\r\n    }, // 点标记显示位置偏移量，默认值为 [0,0] 。Marker指定position后，默认以marker左上角位置为基准点（若设置了anchor，则以anchor设置位置为基准点），对准所给定的position位置，若需使marker指定位置对准在position处，需根据marker的尺寸设置一定的偏移量。\r\n    content: {\r\n      type: [String, Object]\r\n    }, // 显示内容，可以是HTML要素字符串或者HTMLElement对象\r\n    size: {\r\n      type: Array\r\n    }, // 信息窗体尺寸（isCustom为true时，该属性无效）\r\n    anchor: {\r\n      type: String\r\n    }, // 信息窗体锚点。默认值：'bottom-center'。可选值：'top-left'|'top-center'|'top-right'|'middle-left'|'center'|'middle-right'|'bottom-left'|'bottom-center'|'bottom-right'\r\n    offset: {\r\n      type: Array\r\n    }, // 信息窗体显示位置偏移量。默认基准点为信息窗体的底部中心。默认值: [0, 0]\r\n    position: {\r\n      type: Array\r\n    } // 信息窗体显示基点位置\r\n  },\r\n  emits: ['update:visible'],\r\n  data() {\r\n    return {\r\n      converters: {\r\n      }\r\n    };\r\n  },\r\n  unmounted() {\r\n    if(this.$amapComponent){\r\n      this.$amapComponent.close();\r\n    }\r\n  },\r\n  updated() {\r\n    if(!this.content && this.$amapComponent){\r\n      this.$amapComponent.setContent(this.$refs.info);\r\n    }\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      if (!options.content) {\r\n        options.content = this.getSlotContent();\r\n      }\r\n      this.$amapComponent = new AMap.InfoWindow(options);\r\n      this.$amapComponent.on('close', () => {\r\n        this.$emit('update:visible', false);\r\n      });\r\n      if (this.visible !== false) {\r\n        this.$amapComponent.open(this.$parentComponent, this.position);\r\n      }\r\n      if(!this.content && this.$amapComponent){\r\n        // 观察器的配置（需要观察什么变动）\r\n        const config = { attributes: true, childList: true, subtree: true };\r\n        // 创建一个观察器实例并传入回调函数\r\n        const observer = new MutationObserver(() => {\r\n          this.$amapComponent.setContent(this.getSlotContent());\r\n        });\r\n        observer.observe(this.$refs.info as Node, config);\r\n        this.observer = observer;\r\n      }\r\n    },\r\n    getSlotContent(){\r\n      return (this.$refs.info as HTMLDivElement);\r\n    },\r\n    destroyComponent() {\r\n      if(this.observer){\r\n        this.observer.disconnect();\r\n        this.observer = null;\r\n      }\r\n      if(this.$amapComponent){\r\n        if(this.$amapComponent.getIsOpen()){\r\n          this.$amapComponent.close();\r\n        }\r\n        this.$amapComponent = null;\r\n        this.$parentComponent = null;\r\n      }\r\n    },\r\n    __position(position){\r\n      if (this.visible) {\r\n        this.$amapComponent.open(this.$parentComponent, position);\r\n      } else {\r\n        this.$amapComponent.setPosition(position);\r\n      }\r\n    },\r\n    __visible(flag) {\r\n      // fixed Amap info-window reopen\r\n      const position = this.$amapComponent.getPosition();\r\n      if (position) {\r\n        flag === false ? this.$amapComponent.close() : this.$amapComponent.open(this.$parentComponent, [position.lng, position.lat]);\r\n      }\r\n    },\r\n  },\r\n});\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}