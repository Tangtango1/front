{"ast":null,"code":"import baseDifference from './_baseDifference.mjs';\nimport baseFlatten from './_baseFlatten.mjs';\nimport baseUniq from './_baseUniq.mjs';\n\n/**\n * The base implementation of methods like `_.xor`, without support for\n * iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of values.\n */\nfunction baseXor(arrays, iteratee, comparator) {\n  var length = arrays.length;\n  if (length < 2) {\n    return length ? baseUniq(arrays[0]) : [];\n  }\n  var index = -1,\n    result = Array(length);\n  while (++index < length) {\n    var array = arrays[index],\n      othIndex = -1;\n    while (++othIndex < length) {\n      if (othIndex != index) {\n        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n      }\n    }\n  }\n  return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n}\nexport { baseXor as default };","map":{"version":3,"names":["baseXor","arrays","iteratee","comparator","length","baseUniq","index","result","Array","array","othIndex","baseDifference","baseFlatten"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseXor.js"],"sourcesContent":["import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * The base implementation of methods like `_.xor`, without support for\n * iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of values.\n */\nfunction baseXor(arrays, iteratee, comparator) {\n  var length = arrays.length;\n  if (length < 2) {\n    return length ? baseUniq(arrays[0]) : [];\n  }\n  var index = -1,\n      result = Array(length);\n\n  while (++index < length) {\n    var array = arrays[index],\n        othIndex = -1;\n\n    while (++othIndex < length) {\n      if (othIndex != index) {\n        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n      }\n    }\n  }\n  return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n}\n\nexport default baseXor;\n"],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAOA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EAC7C,IAAIC,MAAM,GAAGH,MAAM,CAACG,MAAM;EAC1B,IAAIA,MAAM,GAAG,CAAC,EAAE;IACd,OAAOA,MAAM,GAAGC,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;EAC5C;EACE,IAAIK,KAAK,GAAG,CAAC,CAAC;IACVC,MAAM,GAAGC,KAAK,CAACJ,MAAM,CAAC;EAE1B,OAAO,EAAEE,KAAK,GAAGF,MAAM,EAAE;IACvB,IAAIK,KAAK,GAAGR,MAAM,CAACK,KAAK,CAAC;MACrBI,QAAQ,GAAG,CAAC,CAAC;IAEjB,OAAO,EAAEA,QAAQ,GAAGN,MAAM,EAAE;MAC1B,IAAIM,QAAQ,IAAIJ,KAAK,EAAE;QACrBC,MAAM,CAACD,KAAK,CAAC,GAAGK,cAAc,CAACJ,MAAM,CAACD,KAAK,CAAC,IAAIG,KAAK,EAAER,MAAM,CAACS,QAAQ,CAAC,EAAER,QAAQ,EAAEC,UAAU,CAAC;MACtG;IACA;EACA;EACE,OAAOE,QAAQ,CAACO,WAAW,CAACL,MAAM,EAAE,CAAC,CAAC,EAAEL,QAAQ,EAAEC,UAAU,CAAC;AAC/D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}