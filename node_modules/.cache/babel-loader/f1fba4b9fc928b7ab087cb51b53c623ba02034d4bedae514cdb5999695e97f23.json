{"ast":null,"code":"// 工具栏配置\nconst toolbarOptions = [['bold', 'italic', 'underline', 'strike'],\n// 加粗 斜体 下划线 删除线\n['blockquote', 'code-block'],\n// 引用  代码块\n[{\n  header: 1\n}, {\n  header: 2\n}],\n// 1、2 级标题\n[{\n  list: 'ordered'\n}, {\n  list: 'bullet'\n}],\n// 有序、无序列表\n[{\n  script: 'sub'\n}, {\n  script: 'super'\n}],\n// 上标/下标\n[{\n  indent: '-1'\n}, {\n  indent: '+1'\n}],\n// 缩进\n// [{'direction': 'rtl'}],                         // 文本方向\n[{\n  size: ['small', false, 'large', 'huge']\n}],\n// 字体大小\n[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}],\n// 标题\n[{\n  color: []\n}, {\n  background: []\n}],\n// 字体颜色、字体背景颜色\n[{\n  font: []\n}],\n// 字体种类\n[{\n  align: []\n}],\n// 对齐方式\n['clean'],\n// 清除文本格式\n['image'] // 图片\n];\nimport { quillEditor } from 'vue-quill-editor';\nimport 'quill/dist/quill.core.css';\nimport 'quill/dist/quill.snow.css';\nimport 'quill/dist/quill.bubble.css';\nexport default {\n  props: {\n    /*编辑器的内容*/\n    value: {\n      type: String\n    },\n    action: {\n      type: String\n    },\n    /*图片大小*/\n    maxSize: {\n      type: Number,\n      default: 4000 //kb\n    }\n  },\n  components: {\n    quillEditor\n  },\n  data() {\n    return {\n      content: '',\n      quillUpdateImg: false,\n      // 根据图片上传状态来确定是否显示loading动画，刚开始是false,不显示\n      editorOption: {\n        placeholder: '',\n        theme: 'snow',\n        // or 'bubble'\n        modules: {\n          toolbar: {\n            container: toolbarOptions,\n            // container: \"#toolbar\",\n            handlers: {\n              image: function (value) {\n                if (value) {\n                  // 触发input框选择图片文件\n                  document.querySelector('.avatar-uploader input').click();\n                } else {\n                  this.quill.format('image', false);\n                }\n              }\n              // link: function(value) {\n              //   if (value) {\n              //     var href = prompt('请输入url');\n              //     this.quill.format(\"link\", href);\n              //   } else {\n              //     this.quill.format(\"link\", false);\n              //   }\n              // },\n            }\n          }\n        }\n      },\n      // serverUrl: `${base.url}sys/storage/uploadSwiper?token=${storage.get('token')}`, // 这里写你要上传的图片服务器地址\n      header: {\n        // token: sessionStorage.token\n        Token: this.$storage.get('Token')\n      } // 有的图片服务器要求请求头需要有token\n    };\n  },\n  computed: {\n    // 计算属性的 getter\n    getActionUrl: function () {\n      // return this.$base.url + this.action + \"?token=\" + this.$storage.get(\"token\");\n      this.setContent(this.value);\n      return `/${this.$base.name}/` + this.action;\n    }\n  },\n  methods: {\n    setContent(value) {\n      this.content = value;\n    },\n    onEditorBlur() {\n      //失去焦点事件\n    },\n    onEditorFocus() {\n      //获得焦点事件\n    },\n    onEditorChange() {\n      // console.log(this.content);\n      // 内容改变事件\n      this.$emit('input', this.content);\n    },\n    // 富文本图片上传前\n    beforeUpload() {\n      // 显示loading动画\n      this.quillUpdateImg = true;\n    },\n    uploadSuccess(res, file) {\n      // res为图片服务器返回的数据\n      // 获取富文本组件实例\n      let quill = this.$refs.myQuillEditor.quill;\n      // 如果上传成功\n      if (res.code === 0) {\n        // 获取光标所在位置\n        let length = quill.getSelection().index;\n        // 插入图片  res.url为服务器返回的图片地址\n        quill.insertEmbed(length, 'image', this.$base.url + 'upload/' + res.file);\n        // 调整光标到最后\n        quill.setSelection(length + 1);\n      } else {\n        this.$message.error('图片插入失败');\n      }\n      // loading动画消失\n      this.quillUpdateImg = false;\n    },\n    // 富文本图片上传失败\n    uploadError() {\n      // loading动画消失\n      this.quillUpdateImg = false;\n      this.$message.error('图片插入失败');\n    }\n  }\n};","map":{"version":3,"names":["toolbarOptions","header","list","script","indent","size","color","background","font","align","quillEditor","props","value","type","String","action","maxSize","Number","default","components","data","content","quillUpdateImg","editorOption","placeholder","theme","modules","toolbar","container","handlers","image","document","querySelector","click","quill","format","Token","$storage","get","computed","getActionUrl","setContent","$base","name","methods","onEditorBlur","onEditorFocus","onEditorChange","$emit","beforeUpload","uploadSuccess","res","file","$refs","myQuillEditor","code","length","getSelection","index","insertEmbed","url","setSelection","$message","error","uploadError"],"sources":["D:\\bise\\bise\\front\\src\\components\\common\\Editor.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 图片上传组件辅助-->\n    <el-upload\n      class=\"avatar-uploader\"\n      :action=\"getActionUrl\"\n      name=\"file\"\n      :headers=\"header\"\n      :show-file-list=\"false\"\n      :on-success=\"uploadSuccess\"\n      :on-error=\"uploadError\"\n      :before-upload=\"beforeUpload\"\n    ></el-upload>\n\n    <quill-editor\n      class=\"editor\"\n      v-model=\"content\"\n      ref=\"myQuillEditor\"\n      :options=\"editorOption\"\n      @blur=\"onEditorBlur($event)\"\n      @focus=\"onEditorFocus($event)\"\n      @change=\"onEditorChange($event)\"\n    ></quill-editor>\n  </div>\n</template>\n\n<script>\n// 工具栏配置\nconst toolbarOptions = [\n  ['bold', 'italic', 'underline', 'strike'], // 加粗 斜体 下划线 删除线\n  ['blockquote', 'code-block'], // 引用  代码块\n  [{ header: 1 }, { header: 2 }], // 1、2 级标题\n  [{ list: 'ordered' }, { list: 'bullet' }], // 有序、无序列表\n  [{ script: 'sub' }, { script: 'super' }], // 上标/下标\n  [{ indent: '-1' }, { indent: '+1' }], // 缩进\n  // [{'direction': 'rtl'}],                         // 文本方向\n  [{ size: ['small', false, 'large', 'huge'] }], // 字体大小\n  [{ header: [1, 2, 3, 4, 5, 6, false] }], // 标题\n  [{ color: [] }, { background: [] }], // 字体颜色、字体背景颜色\n  [{ font: [] }], // 字体种类\n  [{ align: [] }], // 对齐方式\n  ['clean'], // 清除文本格式\n  ['image'], // 图片\n]\n\nimport { quillEditor } from 'vue-quill-editor'\nimport 'quill/dist/quill.core.css'\nimport 'quill/dist/quill.snow.css'\nimport 'quill/dist/quill.bubble.css'\n\nexport default {\n  props: {\n    /*编辑器的内容*/\n    value: {\n      type: String,\n    },\n    action: {\n      type: String,\n    },\n    /*图片大小*/\n    maxSize: {\n      type: Number,\n      default: 4000, //kb\n    },\n  },\n\n  components: {\n    quillEditor,\n  },\n\n  data() {\n    return {\n      content: '',\n      quillUpdateImg: false, // 根据图片上传状态来确定是否显示loading动画，刚开始是false,不显示\n      editorOption: {\n        placeholder: '',\n        theme: 'snow', // or 'bubble'\n        modules: {\n          toolbar: {\n            container: toolbarOptions,\n            // container: \"#toolbar\",\n            handlers: {\n              image: function (value) {\n                if (value) {\n                  // 触发input框选择图片文件\n                  document.querySelector('.avatar-uploader input').click()\n                } else {\n                  this.quill.format('image', false)\n                }\n              },\n              // link: function(value) {\n              //   if (value) {\n              //     var href = prompt('请输入url');\n              //     this.quill.format(\"link\", href);\n              //   } else {\n              //     this.quill.format(\"link\", false);\n              //   }\n              // },\n            },\n          },\n        },\n      },\n      // serverUrl: `${base.url}sys/storage/uploadSwiper?token=${storage.get('token')}`, // 这里写你要上传的图片服务器地址\n      header: {\n        // token: sessionStorage.token\n        Token: this.$storage.get('Token'),\n      }, // 有的图片服务器要求请求头需要有token\n    }\n  },\n  computed: {\n    // 计算属性的 getter\n    getActionUrl: function () {\n      // return this.$base.url + this.action + \"?token=\" + this.$storage.get(\"token\");\n      this.setContent(this.value)\n      return `/${this.$base.name}/` + this.action\n    },\n  },\n  methods: {\n    setContent(value) {\n      this.content = value\n    },\n    onEditorBlur() {\n      //失去焦点事件\n    },\n    onEditorFocus() {\n      //获得焦点事件\n    },\n    onEditorChange() {\n      // console.log(this.content);\n      // 内容改变事件\n      this.$emit('input', this.content)\n    },\n    // 富文本图片上传前\n    beforeUpload() {\n      // 显示loading动画\n      this.quillUpdateImg = true\n    },\n\n    uploadSuccess(res, file) {\n      // res为图片服务器返回的数据\n      // 获取富文本组件实例\n      let quill = this.$refs.myQuillEditor.quill\n      // 如果上传成功\n      if (res.code === 0) {\n        // 获取光标所在位置\n        let length = quill.getSelection().index\n        // 插入图片  res.url为服务器返回的图片地址\n        quill.insertEmbed(\n          length,\n          'image',\n          this.$base.url + 'upload/' + res.file\n        )\n        // 调整光标到最后\n        quill.setSelection(length + 1)\n      } else {\n        this.$message.error('图片插入失败')\n      }\n      // loading动画消失\n      this.quillUpdateImg = false\n    },\n    // 富文本图片上传失败\n    uploadError() {\n      // loading动画消失\n      this.quillUpdateImg = false\n      this.$message.error('图片插入失败')\n    },\n  },\n}\n</script>\n\n<style>\n.editor {\n  line-height: normal !important;\n}\n.ql-snow .ql-tooltip[data-mode='link']::before {\n  content: '请输入链接地址:';\n}\n.ql-snow .ql-tooltip.ql-editing a.ql-action::after {\n  border-right: 0px;\n  content: '保存';\n  padding-right: 0px;\n}\n\n.ql-snow .ql-tooltip[data-mode='video']::before {\n  content: '请输入视频地址:';\n}\n.ql-container {\n  height: 400px;\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-label::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item::before {\n  content: '14px';\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='small']::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='small']::before {\n  content: '10px';\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='large']::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='large']::before {\n  content: '18px';\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='huge']::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='huge']::before {\n  content: '32px';\n}\n\n.ql-snow .ql-picker.ql-header .ql-picker-label::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item::before {\n  content: '文本';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='1']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='1']::before {\n  content: '标题1';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='2']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='2']::before {\n  content: '标题2';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='3']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='3']::before {\n  content: '标题3';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='4']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='4']::before {\n  content: '标题4';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='5']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='5']::before {\n  content: '标题5';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='6']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='6']::before {\n  content: '标题6';\n}\n\n.ql-snow .ql-picker.ql-font .ql-picker-label::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item::before {\n  content: '标准字体';\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value='serif']::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value='serif']::before {\n  content: '衬线字体';\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value='monospace']::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value='monospace']::before {\n  content: '等宽字体';\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}