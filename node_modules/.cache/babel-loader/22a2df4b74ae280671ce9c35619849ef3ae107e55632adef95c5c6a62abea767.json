{"ast":null,"code":"import baseToString from './_baseToString.mjs';\nimport castSlice from './_castSlice.mjs';\nimport hasUnicode from './_hasUnicode.mjs';\nimport isObject from './isObject.mjs';\nimport isRegExp from './isRegExp.mjs';\nimport stringSize from './_stringSize.mjs';\nimport stringToArray from './_stringToArray.mjs';\nimport toInteger from './toInteger.mjs';\nimport toString from './toString.mjs';\n\n/** Used as default options for `_.truncate`. */\nvar DEFAULT_TRUNC_LENGTH = 30,\n  DEFAULT_TRUNC_OMISSION = '...';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to truncate.\n * @param {Object} [options={}] The options object.\n * @param {number} [options.length=30] The maximum string length.\n * @param {string} [options.omission='...'] The string to indicate text is omitted.\n * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n * @returns {string} Returns the truncated string.\n * @example\n *\n * _.truncate('hi-diddly-ho there, neighborino');\n * // => 'hi-diddly-ho there, neighbo...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': ' '\n * });\n * // => 'hi-diddly-ho there,...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': /,? +/\n * });\n * // => 'hi-diddly-ho there...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'omission': ' [...]'\n * });\n * // => 'hi-diddly-ho there, neig [...]'\n */\nfunction truncate(string, options) {\n  var length = DEFAULT_TRUNC_LENGTH,\n    omission = DEFAULT_TRUNC_OMISSION;\n  if (isObject(options)) {\n    var separator = 'separator' in options ? options.separator : separator;\n    length = 'length' in options ? toInteger(options.length) : length;\n    omission = 'omission' in options ? baseToString(options.omission) : omission;\n  }\n  string = toString(string);\n  var strLength = string.length;\n  if (hasUnicode(string)) {\n    var strSymbols = stringToArray(string);\n    strLength = strSymbols.length;\n  }\n  if (length >= strLength) {\n    return string;\n  }\n  var end = length - stringSize(omission);\n  if (end < 1) {\n    return omission;\n  }\n  var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);\n  if (separator === undefined) {\n    return result + omission;\n  }\n  if (strSymbols) {\n    end += result.length - end;\n  }\n  if (isRegExp(separator)) {\n    if (string.slice(end).search(separator)) {\n      var match,\n        substring = result;\n      if (!separator.global) {\n        separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n      }\n      separator.lastIndex = 0;\n      while (match = separator.exec(substring)) {\n        var newEnd = match.index;\n      }\n      result = result.slice(0, newEnd === undefined ? end : newEnd);\n    }\n  } else if (string.indexOf(baseToString(separator), end) != end) {\n    var index = result.lastIndexOf(separator);\n    if (index > -1) {\n      result = result.slice(0, index);\n    }\n  }\n  return result + omission;\n}\nexport { truncate as default };","map":{"version":3,"names":["DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","reFlags","truncate","string","options","length","omission","isObject","separator","toInteger","baseToString","toString","strLength","hasUnicode","strSymbols","stringToArray","end","stringSize","result","castSlice","join","slice","undefined","isRegExp","search","match","substring","global","RegExp","source","exec","lastIndex","newEnd","index","indexOf","lastIndexOf"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/truncate.js"],"sourcesContent":["import baseToString from './_baseToString.js';\nimport castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport isObject from './isObject.js';\nimport isRegExp from './isRegExp.js';\nimport stringSize from './_stringSize.js';\nimport stringToArray from './_stringToArray.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/** Used as default options for `_.truncate`. */\nvar DEFAULT_TRUNC_LENGTH = 30,\n    DEFAULT_TRUNC_OMISSION = '...';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to truncate.\n * @param {Object} [options={}] The options object.\n * @param {number} [options.length=30] The maximum string length.\n * @param {string} [options.omission='...'] The string to indicate text is omitted.\n * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n * @returns {string} Returns the truncated string.\n * @example\n *\n * _.truncate('hi-diddly-ho there, neighborino');\n * // => 'hi-diddly-ho there, neighbo...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': ' '\n * });\n * // => 'hi-diddly-ho there,...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': /,? +/\n * });\n * // => 'hi-diddly-ho there...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'omission': ' [...]'\n * });\n * // => 'hi-diddly-ho there, neig [...]'\n */\nfunction truncate(string, options) {\n  var length = DEFAULT_TRUNC_LENGTH,\n      omission = DEFAULT_TRUNC_OMISSION;\n\n  if (isObject(options)) {\n    var separator = 'separator' in options ? options.separator : separator;\n    length = 'length' in options ? toInteger(options.length) : length;\n    omission = 'omission' in options ? baseToString(options.omission) : omission;\n  }\n  string = toString(string);\n\n  var strLength = string.length;\n  if (hasUnicode(string)) {\n    var strSymbols = stringToArray(string);\n    strLength = strSymbols.length;\n  }\n  if (length >= strLength) {\n    return string;\n  }\n  var end = length - stringSize(omission);\n  if (end < 1) {\n    return omission;\n  }\n  var result = strSymbols\n    ? castSlice(strSymbols, 0, end).join('')\n    : string.slice(0, end);\n\n  if (separator === undefined) {\n    return result + omission;\n  }\n  if (strSymbols) {\n    end += (result.length - end);\n  }\n  if (isRegExp(separator)) {\n    if (string.slice(end).search(separator)) {\n      var match,\n          substring = result;\n\n      if (!separator.global) {\n        separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n      }\n      separator.lastIndex = 0;\n      while ((match = separator.exec(substring))) {\n        var newEnd = match.index;\n      }\n      result = result.slice(0, newEnd === undefined ? end : newEnd);\n    }\n  } else if (string.indexOf(baseToString(separator), end) != end) {\n    var index = result.lastIndexOf(separator);\n    if (index > -1) {\n      result = result.slice(0, index);\n    }\n  }\n  return result + omission;\n}\n\nexport default truncate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}