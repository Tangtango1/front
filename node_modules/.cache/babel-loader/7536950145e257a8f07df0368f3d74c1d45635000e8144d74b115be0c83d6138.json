{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { registerMixin } from '@vuemap/vue-amap-util';\nvar script = defineComponent({\n  name: \"ElAmapLayerTraffic\",\n  mixins: [registerMixin],\n  props: {\n    autoRefresh: {\n      type: Boolean,\n      defult: true\n    },\n    interval: {\n      type: Number\n    },\n    zooms: {\n      type: Array\n    },\n    opacity: {\n      type: Number\n    },\n    tileSize: {\n      type: Number\n    }\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    __initComponent(options) {\n      this.$amapComponent = new AMap.TileLayer.Traffic(options);\n      this.$parentComponent.add(this.$amapComponent);\n    },\n    stopFresh() {\n      if (this.$amapComponent) {\n        this.$amapComponent.stopFresh();\n      }\n    },\n    destroyComponent() {\n      if (!this.parentInstance.isDestroy) {\n        this.$parentComponent.remove(this.$amapComponent);\n      }\n      this.$amapComponent = null;\n      this.$parentComponent = null;\n    }\n  },\n  render() {\n    return null;\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","mixins","registerMixin","props","autoRefresh","type","Boolean","defult","interval","Number","zooms","Array","opacity","tileSize","data","methods","__initComponent","options","$amapComponent","AMap","TileLayer","Traffic","$parentComponent","add","stopFresh","destroyComponent","parentInstance","isDestroy","remove","render"],"sources":["../../../../../packages/layer/official/Traffic/Traffic.vue"],"sourcesContent":["<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport {registerMixin} from '@vuemap/vue-amap-util';\r\n\r\nexport default defineComponent({\r\n  name: 'ElAmapLayerTraffic',\r\n  mixins: [registerMixin],\r\n  props: {\r\n    autoRefresh: {\r\n      type: Boolean,\r\n      defult: true\r\n    }, // 是否自动更新数据，默认开启\r\n    interval: {\r\n      type: Number\r\n    }, // 自动更新数据的间隔毫秒数，默认 180ms\r\n    zooms: {\r\n      type: Array\r\n    }, // 支持的缩放级别范围，默认范围 [2-30]\r\n    opacity: {\r\n      type: Number\r\n    }, // 透明度，默认 1\r\n    tileSize: {\r\n      type: Number\r\n    }// 切片大小，取值： 256，表示切片大小为256 256， 128，表示切片大小为128 128， 64，表示切片大小为64*64。默认值为256\r\n  },\r\n  data() {\r\n    return {\r\n    };\r\n  },\r\n  methods: {\r\n    __initComponent(options) {\r\n      this.$amapComponent = new AMap.TileLayer.Traffic(options);\r\n      this.$parentComponent.add(this.$amapComponent);\r\n    },\r\n    stopFresh() {\r\n      if (this.$amapComponent) {\r\n        this.$amapComponent.stopFresh();\r\n      }\r\n    },\r\n    destroyComponent() {\r\n      if(!this.parentInstance.isDestroy){\r\n        this.$parentComponent.remove(this.$amapComponent);\r\n      }\r\n      this.$amapComponent = null;\r\n      this.$parentComponent = null;\r\n    }\r\n  },\r\n  render(){\r\n    return null;\r\n  }\r\n});\r\n</script>\r\n"],"mappings":";;AAIA,IAAAA,MAAA,GAAeC,eAAgB;EAC7BC,IAAM;EACNC,MAAA,EAAQ,CAACC,aAAA;EACTC,KAAO;IACLC,WAAa;MACXC,IAAM,EAAAC,OAAA;MACNC,MAAQ;IAAA;IAEVC,QAAU;MACRH,IAAM,EAAAI;IAAA;IAERC,KAAO;MACLL,IAAM,EAAAM;IAAA;IAERC,OAAS;MACPP,IAAM,EAAAI;IAAA;IAERI,QAAU;MACRR,IAAM,EAAAI;IAAA;EAAA;EAGVK,IAAOA,CAAA;IACE;EAAA;EAGTC,OAAS;IACPC,gBAAgBC,OAAS;MACvB,KAAKC,cAAiB,OAAIC,IAAK,CAAAC,SAAA,CAAUC,OAAQ,CAAAJ,OAAA;MAC5C,KAAAK,gBAAA,CAAiBC,GAAA,CAAI,IAAK,CAAAL,cAAA;IAAA;IAEjCM,SAAYA,CAAA;MACV,IAAI,KAAKN,cAAgB;QACvB,KAAKA,cAAe,CAAAM,SAAA;MAAA;IAAA;IAGxBC,gBAAmBA,CAAA;MACd,KAAC,IAAK,CAAAC,cAAA,CAAeC,SAAU;QAC3B,KAAAL,gBAAA,CAAiBM,MAAA,CAAO,IAAK,CAAAV,cAAA;MAAA;MAEpC,KAAKA,cAAiB;MACtB,KAAKI,gBAAmB;IAAA;EAAA;EAG5BO,MAAQA,CAAA;IACC;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}