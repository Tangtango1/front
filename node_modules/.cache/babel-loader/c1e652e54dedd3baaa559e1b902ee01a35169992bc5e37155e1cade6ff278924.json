{"ast":null,"code":"import Stack from './_Stack.mjs';\nimport equalArrays from './_equalArrays.mjs';\nimport equalByTag from './_equalByTag.mjs';\nimport equalObjects from './_equalObjects.mjs';\nimport getTag from './_getTag.mjs';\nimport isArray from './isArray.mjs';\nimport isBuffer from './isBuffer.mjs';\nimport isTypedArray from './isTypedArray.mjs';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n  arrayTag = '[object Array]',\n  objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n    othIsArr = isArray(other),\n    objTag = objIsArr ? arrayTag : getTag(object),\n    othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n    othIsObj = othTag == objectTag,\n    isSameTag = objTag == othTag;\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n      othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n        othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\nexport { baseIsEqualDeep as default };","map":{"version":3,"names":["COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","objectProto","Object","prototype","hasOwnProperty","baseIsEqualDeep","object","other","bitmask","customizer","equalFunc","stack","objIsArr","isArray","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","isBuffer","Stack","isTypedArray","equalArrays","equalByTag","objIsWrapped","call","othIsWrapped","objUnwrapped","value","othUnwrapped","equalObjects"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsEqualDeep.js"],"sourcesContent":["import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n"],"mappings":";;;;;;;;;AASA;AACA,IAAIA,oBAAoB,GAAG,CAAC;;AAE5B;AACA,IAAIC,OAAO,GAAG,oBAAoB;EAC9BC,QAAQ,GAAG,gBAAgB;EAC3BC,SAAS,GAAG,iBAAiB;;AAEjC;AACA,IAAIC,WAAW,GAAGC,MAAM,CAACC,SAAS;;AAElC;AACA,IAAIC,cAAc,GAAGH,WAAW,CAACG,cAAc;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAE;EAC7E,IAAIC,QAAQ,GAAGC,OAAO,CAACP,MAAM,CAAC;IAC1BQ,QAAQ,GAAGD,OAAO,CAACN,KAAK,CAAC;IACzBQ,MAAM,GAAGH,QAAQ,GAAGb,QAAQ,GAAGiB,MAAM,CAACV,MAAM,CAAC;IAC7CW,MAAM,GAAGH,QAAQ,GAAGf,QAAQ,GAAGiB,MAAM,CAACT,KAAK,CAAC;EAEhDQ,MAAM,GAAGA,MAAM,IAAIjB,OAAO,GAAGE,SAAS,GAAGe,MAAM;EAC/CE,MAAM,GAAGA,MAAM,IAAInB,OAAO,GAAGE,SAAS,GAAGiB,MAAM;EAE/C,IAAIC,QAAQ,GAAGH,MAAM,IAAIf,SAAS;IAC9BmB,QAAQ,GAAGF,MAAM,IAAIjB,SAAS;IAC9BoB,SAAS,GAAGL,MAAM,IAAIE,MAAM;EAEhC,IAAIG,SAAS,IAAIC,QAAQ,CAACf,MAAM,CAAC,EAAE;IACjC,IAAI,CAACe,QAAQ,CAACd,KAAK,CAAC,EAAE;MACpB,OAAO,KAAK;IAClB;IACIK,QAAQ,GAAG,IAAI;IACfM,QAAQ,GAAG,KAAK;EACpB;EACE,IAAIE,SAAS,IAAI,CAACF,QAAQ,EAAE;IAC1BP,KAAK,KAAKA,KAAK,GAAG,IAAIW,KAAK,CAAL,CAAK,CAAC;IAC5B,OAAQV,QAAQ,IAAIW,YAAY,CAACjB,MAAM,CAAC,GACpCkB,WAAW,CAAClB,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,SAAS,EAAEC,KAAK,CAAC,GACjEc,UAAU,CAACnB,MAAM,EAAEC,KAAK,EAAEQ,MAAM,EAAEP,OAAO,EAAEC,UAAU,EAAEC,SAAS,EAAEC,KAAK,CAAC;EAChF;EACE,IAAI,EAAEH,OAAO,GAAGX,oBAAoB,CAAC,EAAE;IACrC,IAAI6B,YAAY,GAAGR,QAAQ,IAAId,cAAc,CAACuB,IAAI,CAACrB,MAAM,EAAE,aAAa,CAAC;MACrEsB,YAAY,GAAGT,QAAQ,IAAIf,cAAc,CAACuB,IAAI,CAACpB,KAAK,EAAE,aAAa,CAAC;IAExE,IAAImB,YAAY,IAAIE,YAAY,EAAE;MAChC,IAAIC,YAAY,GAAGH,YAAY,GAAGpB,MAAM,CAACwB,KAAK,EAAE,GAAGxB,MAAM;QACrDyB,YAAY,GAAGH,YAAY,GAAGrB,KAAK,CAACuB,KAAK,EAAE,GAAGvB,KAAK;MAEvDI,KAAK,KAAKA,KAAK,GAAG,IAAIW,KAAK,CAAL,CAAK,CAAC;MAC5B,OAAOZ,SAAS,CAACmB,YAAY,EAAEE,YAAY,EAAEvB,OAAO,EAAEC,UAAU,EAAEE,KAAK,CAAC;IAC9E;EACA;EACE,IAAI,CAACS,SAAS,EAAE;IACd,OAAO,KAAK;EAChB;EACET,KAAK,KAAKA,KAAK,GAAG,IAAIW,KAAK,CAAL,CAAK,CAAC;EAC5B,OAAOU,YAAY,CAAC1B,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,SAAS,EAAEC,KAAK,CAAC;AAC3E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}