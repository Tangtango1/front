{"ast":null,"code":"import baseToString from './_baseToString.mjs';\nimport castSlice from './_castSlice.mjs';\nimport charsStartIndex from './_charsStartIndex.mjs';\nimport stringToArray from './_stringToArray.mjs';\nimport toString from './toString.mjs';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n    start = charsStartIndex(strSymbols, stringToArray(chars));\n  return castSlice(strSymbols, start).join('');\n}\nexport { trimStart as default };","map":{"version":3,"names":["reTrimStart","trimStart","string","chars","guard","toString","undefined","replace","baseToString","strSymbols","stringToArray","start","charsStartIndex","castSlice","join"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/trimStart.js"],"sourcesContent":["import baseToString from './_baseToString.js';\nimport castSlice from './_castSlice.js';\nimport charsStartIndex from './_charsStartIndex.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nexport default trimStart;\n"],"mappings":";;;;;;AAMA;AACA,IAAIA,WAAW,GAAG,MAAM;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAACC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACvCF,MAAM,GAAGG,QAAQ,CAACH,MAAM,CAAC;EACzB,IAAIA,MAAM,KAAKE,KAAK,IAAID,KAAK,KAAKG,SAAS,CAAC,EAAE;IAC5C,OAAOJ,MAAM,CAACK,OAAO,CAACP,WAAW,EAAE,EAAE,CAAC;EAC1C;EACE,IAAI,CAACE,MAAM,IAAI,EAAEC,KAAK,GAAGK,YAAY,CAACL,KAAK,CAAC,CAAC,EAAE;IAC7C,OAAOD,MAAM;EACjB;EACE,IAAIO,UAAU,GAAGC,aAAa,CAACR,MAAM,CAAC;IAClCS,KAAK,GAAGC,eAAe,CAACH,UAAU,EAAEC,aAAa,CAACP,KAAK,CAAC,CAAC;EAE7D,OAAOU,SAAS,CAACJ,UAAU,EAAEE,KAAK,CAAC,CAACG,IAAI,CAAC,EAAE,CAAC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}