{"ast":null,"code":"import baseIsEqual from './_baseIsEqual.mjs';\nimport get from './get.mjs';\nimport hasIn from './hasIn.mjs';\nimport isKey from './_isKey.mjs';\nimport isStrictComparable from './_isStrictComparable.mjs';\nimport matchesStrictComparable from './_matchesStrictComparable.mjs';\nimport toKey from './_toKey.mjs';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n  COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\nexport { baseMatchesProperty as default };","map":{"version":3,"names":["COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseMatchesProperty","path","srcValue","isKey","isStrictComparable","matchesStrictComparable","toKey","object","objValue","get","undefined","hasIn","baseIsEqual"],"sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseMatchesProperty.js"],"sourcesContent":["import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n"],"mappings":";;;;;;;;AAQA;AACA,IAAIA,oBAAoB,GAAG,CAAC;EACxBC,sBAAsB,GAAG,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAC3C,IAAIC,KAAK,CAACF,IAAI,CAAC,IAAIG,kBAAkB,CAACF,QAAQ,CAAC,EAAE;IAC/C,OAAOG,uBAAuB,CAACC,KAAK,CAACL,IAAI,CAAC,EAAEC,QAAQ,CAAC;EACzD;EACE,OAAO,UAASK,MAAM,EAAE;IACtB,IAAIC,QAAQ,GAAGC,GAAG,CAACF,MAAM,EAAEN,IAAI,CAAC;IAChC,OAAQO,QAAQ,KAAKE,SAAS,IAAIF,QAAQ,KAAKN,QAAQ,GACnDS,KAAK,CAACJ,MAAM,EAAEN,IAAI,CAAC,GACnBW,WAAW,CAACV,QAAQ,EAAEM,QAAQ,EAAEV,oBAAoB,GAAGC,sBAAsB,CAAC;EACtF,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}