{"ast":null,"code":"class VideoLayer {\n  constructor(options, video) {\n    this.canPlay = false;\n    this.frame = -1;\n    const canvas = document.createElement(\"canvas\");\n    this.video = video;\n    video.src = options.url;\n    video.autoplay = true;\n    video.loop = options.loop;\n    const layerOptions = {\n      ...options,\n      canvas\n    };\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n    this.layer = new AMap.CanvasLayer(layerOptions);\n    this.initVideoEvents();\n    this.load();\n  }\n  getLayer() {\n    return this.layer;\n  }\n  initVideoEvents() {\n    var _a;\n    (_a = this.video) == null ? void 0 : _a.addEventListener(\"canplaythrough\", () => {\n      var _a2, _b;\n      if (this.canvas) {\n        this.canvas.width = (_a2 = this.video) == null ? void 0 : _a2.videoWidth;\n        this.canvas.height = (_b = this.video) == null ? void 0 : _b.videoHeight;\n      }\n      this.canPlay = true;\n      this.play();\n    });\n  }\n  load() {\n    var _a;\n    (_a = this.video) == null ? void 0 : _a.load();\n  }\n  play() {\n    var _a;\n    if (this.canPlay) {\n      (_a = this.video) == null ? void 0 : _a.play();\n      this.stopRender();\n      this.render();\n    }\n  }\n  pause() {\n    var _a;\n    this.stopRender();\n    (_a = this.video) == null ? void 0 : _a.pause();\n  }\n  stopRender() {\n    if (this.frame) {\n      cancelAnimationFrame(this.frame);\n    }\n  }\n  render() {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    this.frame = window.requestAnimationFrame(() => {\n      this.render();\n    });\n    if ((_a = this.video) == null ? void 0 : _a.paused) {\n      (_b = this.video) == null ? void 0 : _b.play();\n    } else {\n      (_e = this.context) == null ? void 0 : _e.clearRect(0, 0, (_c = this.canvas) == null ? void 0 : _c.width, (_d = this.canvas) == null ? void 0 : _d.height);\n      (_h = this.context) == null ? void 0 : _h.drawImage(this.video, 0, 0, (_f = this.canvas) == null ? void 0 : _f.width, (_g = this.canvas) == null ? void 0 : _g.height);\n      this.layer.reFresh();\n    }\n  }\n  destroy() {\n    this.stopRender();\n    if (this.video) {\n      this.video.pause();\n    }\n    this.video = null;\n  }\n  setUrl(url) {\n    this.stopRender();\n    this.canPlay = false;\n    if (this.video) {\n      this.video.src = url;\n      this.load();\n    }\n  }\n  setZooms(zooms) {\n    this.getLayer().setZoom(zooms);\n  }\n  setOpacity(opacity) {\n    this.getLayer().setOpacity(opacity);\n  }\n  setBounds(bounds) {\n    this.getLayer().setBounds(bounds);\n  }\n  setzIndex(zIndex) {\n    this.getLayer().setzIndex(zIndex);\n  }\n  show() {\n    this.getLayer().show();\n  }\n  hide() {\n    this.getLayer().hide();\n  }\n}\nexport { VideoLayer as default };","map":{"version":3,"names":["VideoLayer","constructor","options","video","canPlay","frame","canvas","document","createElement","src","url","autoplay","loop","layerOptions","context","getContext","layer","AMap","CanvasLayer","initVideoEvents","load","getLayer","_a","addEventListener","_a2","_b","width","videoWidth","height","videoHeight","play","stopRender","render","pause","cancelAnimationFrame","_c","_d","_e","_f","_g","_h","window","requestAnimationFrame","paused","clearRect","drawImage","reFresh","destroy","setUrl","setZooms","zooms","setZoom","setOpacity","opacity","setBounds","bounds","setzIndex","zIndex","show","hide"],"sources":["../../../../../packages/layer/data/Video/VideoLayer.ts"],"sourcesContent":["interface VideoOption {\r\n  url: string\r\n  zooms: number[]\r\n  bounds: any\r\n  opacity: number\r\n  loop: boolean\r\n}\r\n\r\nclass VideoLayer {\r\n\r\n  canvas: HTMLCanvasElement | null;\r\n  context: CanvasRenderingContext2D | null;\r\n  video: HTMLVideoElement | null;\r\n  layer: any;\r\n  canPlay = false;\r\n  frame = -1;\r\n\r\n  constructor(options: VideoOption, video: HTMLVideoElement) {\r\n    const canvas = document.createElement('canvas');\r\n    this.video = video;\r\n    video.src = options.url;\r\n    video.autoplay = true;\r\n    video.loop = options.loop;\r\n    const layerOptions = {\r\n      ...options,\r\n      canvas\r\n    }\r\n    this.canvas = canvas;\r\n    this.context = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this.layer = new AMap.CanvasLayer(layerOptions);\r\n    this.initVideoEvents();\r\n    this.load();\r\n  }\r\n\r\n  getLayer() {\r\n    return this.layer;\r\n  }\r\n\r\n  initVideoEvents() {\r\n    this.video?.addEventListener('canplaythrough', () => {\r\n      if (this.canvas) {\r\n        this.canvas.width = this.video?.videoWidth as number;\r\n        this.canvas.height = this.video?.videoHeight as number;\r\n      }\r\n      this.canPlay = true;\r\n      this.play();\r\n    })\r\n  }\r\n\r\n  load() {\r\n    this.video?.load()\r\n  }\r\n\r\n  play() {\r\n    if (this.canPlay) {\r\n      this.video?.play();\r\n      this.stopRender()\r\n      this.render()\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    this.stopRender();\r\n    this.video?.pause();\r\n  }\r\n\r\n  stopRender() {\r\n    if (this.frame) {\r\n      cancelAnimationFrame(this.frame);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.frame = window.requestAnimationFrame(() => {\r\n      this.render()\r\n    })\r\n    if (this.video?.paused) {\r\n      this.video?.play();\r\n    } else {\r\n      this.context?.clearRect(0, 0, this.canvas?.width as number, this.canvas?.height as number)\r\n      this.context?.drawImage(this.video as any, 0, 0, this.canvas?.width as number, this.canvas?.height as number)  //绘制视频\r\n      this.layer.reFresh();\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.stopRender();\r\n    if (this.video) {\r\n      this.video.pause();\r\n    }\r\n    this.video = null;\r\n  }\r\n\r\n  setUrl(url: string) {\r\n    this.stopRender();\r\n    this.canPlay = false;\r\n    if (this.video) {\r\n      this.video.src = url;\r\n      this.load()\r\n    }\r\n  }\r\n\r\n  setZooms(zooms) {\r\n    this.getLayer().setZoom(zooms);\r\n  }\r\n\r\n  setOpacity(opacity) {\r\n    this.getLayer().setOpacity(opacity);\r\n  }\r\n\r\n  setBounds(bounds) {\r\n    this.getLayer().setBounds(bounds);\r\n  }\r\n\r\n  setzIndex(zIndex) {\r\n    this.getLayer().setzIndex(zIndex);\r\n  }\r\n\r\n  show() {\r\n    this.getLayer().show();\r\n  }\r\n\r\n  hide() {\r\n    this.getLayer().hide();\r\n  }\r\n}\r\n\r\nexport default VideoLayer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}