{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"content\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"100%\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"text main-text\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"100%\",\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_5 = {\n  style: {\n    \"width\": \"50%\",\n    \"height\": \"100%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\"  <div style=\\\"width: 100%;height: 100%\\\" v-if=\\\"sessionTable!='users'\\\">\"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, \"欢迎使用 \" + _toDisplayString(this.$project.projectName), 1 /* TEXT */)]), $data.sessionTable == 'users' && false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    style: {\n      \"width\": \"50%\",\n      \"height\": \"100%\"\n    }\n  }, [_createElementVNode(\"div\", {\n    id: \"statistic1\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"600px\"\n    }\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_date_picker, {\n    modelValue: $data.echartsDate,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.echartsDate = $event),\n    type: \"month\",\n    placeholder: \"选择月\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    onClick: _cache[1] || (_cache[1] = $event => $options.chartDialog2())\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"查询\")])),\n    _: 1 /* STABLE */,\n    __: [2]\n  }), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    id: \"statistic2\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"600px\"\n    }\n  }, null, -1 /* HOISTED */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$project","projectName","$data","sessionTable","_hoisted_4","id","_hoisted_5","_createVNode","_component_el_date_picker","echartsDate","$event","type","placeholder","_component_el_button","onClick","_cache","$options","chartDialog2"],"sources":["D:\\bise\\bise\\front\\src\\views\\home.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <!--  <div style=\"width: 100%;height: 100%\" v-if=\"sessionTable!='users'\">-->\n    <div style=\"width: 100%; height: 100%\">\n      <div class=\"text main-text\">欢迎使用 {{ this.$project.projectName }}</div>\n    </div>\n    <div\n      style=\"width: 100%; height: 100%; display: flex\"\n      v-if=\"sessionTable == 'users' && false\"\n    >\n      <div style=\"width: 50%; height: 100%\">\n        <div id=\"statistic1\" style=\"width: 100%; height: 600px\"></div>\n      </div>\n      <div style=\"width: 50%; height: 100%\">\n        <el-date-picker v-model=\"echartsDate\" type=\"month\" placeholder=\"选择月\">\n        </el-date-picker>\n        <el-button @click=\"chartDialog2()\">查询</el-button>\n        <div id=\"statistic2\" style=\"width: 100%; height: 600px\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport router from '@/router/router-static'\nexport default {\n  data() {\n    return {\n      sessionTable: '', //登录账户所在表名\n      role: '', //权限\n      userId: '', //当前登录人的id\n\n      echartsDate: new Date(), //echarts的时间查询字段\n    }\n  },\n  mounted() {\n    //获取当前登录用户的信息\n    this.sessionTable = this.$storage.get('sessionTable')\n    this.role = this.$storage.get('role')\n    this.userId = this.$storage.get('userId')\n\n    this.init()\n    this.chartDialog1()\n    this.chartDialog2()\n  },\n  methods: {\n    chartDialog1() {\n      let _this = this\n      // this.$nextTick(()=>{\n      //   var statistic = this.$echarts.init(document.getElementById(\"statistic1\"),'macarons');\n      //   let params = {\n      //     tableName: \"wuzi\",\n      //     groupColumn: \"wuzi_types\",\n      //   }\n      //   this.$http({\n      //     url: \"newSelectGroupCount\",//pieSum pieCount\n      //     method: \"get\",\n      //     params: params\n      //   }).then(({data}) => {\n      //     if (data && data.code === 0) {\n      //       let res = data.data;\n      //       let xAxis = [];\n      //       let yAxis = [];\n      //       let pArray = []\n      //       var option = {};\n      //       for(let i=0;i<res.length;i++){\n      //         xAxis.push(res[i].name);\n      //         yAxis.push(res[i].value);\n      //         pArray.push({\n      //           value: res[i].value,\n      //           name: res[i].name\n      //         })\n      //         option = {\n      //           title: {\n      //             text: '物资类型分布图',\n      //             left: 'center'\n      //           },\n      //           tooltip: {\n      //             trigger: 'item',\n      //             formatter: '{b} : {c} ({d}%)'\n      //           },\n      //           legend: {\n      //             orient: 'vertical',\n      //             left: 'left'\n      //           },\n      //           series: [\n      //             {\n      //               type: 'pie',\n      //               radius: '55%',\n      //               center: ['50%', '60%'],\n      //               data: pArray,\n      //               emphasis: {\n      //                 itemStyle: {\n      //                   shadowBlur: 10,\n      //                   shadowOffsetX: 0,\n      //                   shadowColor: 'rgba(0, 0, 0, 0.5)'\n      //                 }\n      //               }\n      //             }\n      //           ]\n      //         };\n      //       }\n      //       statistic.setOption(option,true);\n      //       window.onresize = function() {\n      //         statistic.resize();\n      //       };\n      //     }\n      //   });\n      // })\n\n      // let params = {\n      //   dateFormat :\"%Y\", //%Y-%m\n      //   riqi :getYearFormat(_this.echartsDate),//年\n      //   // riqi :getMonthFormat(_this.echartsDate),//年月\n      //   thisTable : {//当前表\n      //     tableName :'shangpin',//当前表表名,\n      //     sumColum : 'shangpin_number', //求和字段\n      //     date : 'insert_time',//分组日期字段\n      //     // string : 'shangpin_name',//分组字符串字段\n      //     // types : 'shangpin_types',//分组下拉框字段\n      //   },\n      //   // joinTable : {//级联表（可以不存在）\n      //   //     tableName :'yonghu',//级联表表名\n      //   //     // date : 'insert_time',//分组日期字段\n      //   //     string : 'yonghu_name',//分组字符串字段\n      //   //     // types : 'yonghu_types',//分组下拉框字段\n      //   // }\n      // }\n      // _this.chartVisiable = true;\n      // _this.$nextTick(() => {\n      //   var statistic = this.$echarts.init(document.getElementById(\"statistic1\"), 'macarons');\n      //   this.$http({\n      //     url: \"barSum\",//barCountOne barCountTwo barSumOne barSumTwo\n      //     method: \"get\",\n      //     params: params\n      //   }).then(({data}) => {\n      //     if(data && data.code === 0){\n      //       let yAxisName = \"数值\";//y轴\n      //       let xAxisName = \"月份\";//x轴\n      //       let series = [];//具体数据值\n      //       data.data.yAxis.forEach(function (item,index) {//点击可关闭的按钮字符串在后台方法中\n      //         let tempMap = {};\n      //         tempMap.name=data.data.legend[index];\n      //         tempMap.type='bar';\n      //         tempMap.data=item;\n      //         series.push(tempMap);\n      //       })\n      //\n      //       var option = {\n      //         tooltip: {\n      //           trigger: 'axis',\n      //           axisPointer: {\n      //             type: 'cross',\n      //             crossStyle: {\n      //               color: '#999'\n      //             }\n      //           }\n      //         },\n      //         toolbox: {\n      //           feature: {\n      //             // dataView: { show: true, readOnly: false },  // 数据查看\n      //             magicType: { show: true, type: ['line', 'bar'] },//切换图形展示方式\n      //             // restore: { show: true }, // 刷新\n      //             saveAsImage: { show: true }//保存\n      //           }\n      //         },\n      //         legend: {\n      //           data: data.data.legend//标题  可以点击导致某一列数据消失\n      //         },\n      //         xAxis: [\n      //           {\n      //             type: 'category',\n      //             axisLabel:{interval: 0},\n      //             name: xAxisName,\n      //             data: data.data.xAxis,\n      //             axisPointer: {\n      //               type: 'shadow'\n      //             }\n      //           }\n      //         ],\n      //         yAxis: [\n      //           {\n      //             type: 'value',//不能改\n      //             name: yAxisName,//y轴单位\n      //             axisLabel: {\n      //               formatter: '{value}' // 后缀\n      //             }\n      //           }\n      //         ],\n      //         series:series//具体数据\n      //       };\n      //       statistic.setOption(option,true);\n      //       window.onresize = function () {\n      //         statistic.resize();\n      //       };\n      //     }else {\n      //       this.$message({\n      //         message: \"报表未查询到数据\",\n      //         type: \"success\",\n      //         duration: 1500,\n      //         onClose: () => {\n      //           this.search();\n      //         }\n      //       });\n      //     }\n      //   });\n      // });\n    },\n    chartDialog2() {\n      let _this = this\n      // this.$nextTick(()=>{\n      //   var statistic = this.$echarts.init(document.getElementById(\"statistic2\"),'macarons');\n      //\n      //   var year = _this.echartsDate.getFullYear();\n      //   var month = _this.echartsDate.getMonth() + 1 < 10 ? '0' + (_this.echartsDate.getMonth() + 1) : _this.echartsDate.getMonth() + 1;\n      //   var riqi=year + \"-\" + month;\n      //\n      //   this.$http({\n      //     url: \"pieSum\",//pieSum pieCount\n      //     method: \"get\",\n      //     params: {\n      //       riqi :riqi\n      //     }\n      //   }).then(({data}) => {\n      //     if (data && data.code === 0) {\n      //       let res = data.data;\n      //       let xAxis = [];\n      //       let yAxis = [];\n      //       let pArray = []\n      //       var option = {};\n      //       for(let i=0;i<res.length;i++){\n      //         xAxis.push(res[i].name);\n      //         yAxis.push(res[i].value);\n      //         pArray.push({\n      //           value: res[i].value,\n      //           name: res[i].name\n      //         })\n      //         option = {\n      //           title: {\n      //             text: '物资月度申请统计报表',\n      //             left: 'center'\n      //           },\n      //           tooltip: {\n      //             trigger: 'item',\n      //             formatter: '{b} : {c} ({d}%)'\n      //           },\n      //           legend: {\n      //             orient: 'vertical',\n      //             left: 'left'\n      //           },\n      //           series: [\n      //             {\n      //               type: 'pie',\n      //               radius: '55%',\n      //               center: ['50%', '60%'],\n      //               data: pArray,\n      //               emphasis: {\n      //                 itemStyle: {\n      //                   shadowBlur: 10,\n      //                   shadowOffsetX: 0,\n      //                   shadowColor: 'rgba(0, 0, 0, 0.5)'\n      //                 }\n      //               }\n      //             }\n      //           ]\n      //         };\n      //       }\n      //       statistic.setOption(option,true);\n      //       window.onresize = function() {\n      //         statistic.resize();\n      //       };\n      //     }\n      //   });\n      // })\n    },\n    init() {\n      if (this.$storage.get('Token')) {\n        this.$http({\n          url: `${this.$storage.get('sessionTable')}/session`,\n          method: 'get',\n        }).then(({ data }) => {\n          if (data && data.code != 0) {\n            router.push({ name: 'login' })\n          }\n        })\n      } else {\n        router.push({ name: 'login' })\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.content {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-height: 500px;\n  text-align: center;\n  .main-text {\n    font-size: 38px;\n    font-weight: bold;\n    margin-top: 15%;\n  }\n  .text {\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EAEbC,KAAiC,EAAjC;IAAA;IAAA;EAAA;AAAiC;;EAC/BD,KAAK,EAAC;AAAgB;;;EAG3BC,KAAgD,EAAhD;IAAA;IAAA;IAAA;EAAA;;;EAMKA,KAAgC,EAAhC;IAAA;IAAA;EAAA;AAAgC;;;;uBAZzCC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,mBAAA,6EAA4E,EAC5EC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAsE,OAAtEE,UAAsE,EAA1C,OAAK,GAAAC,gBAAA,MAAQC,QAAQ,CAACC,WAAW,iB,GAIvDC,KAAA,CAAAC,YAAY,wB,cAFpBV,mBAAA,CAaM,OAbNW,UAaM,G,0BATJR,mBAAA,CAEM;IAFDJ,KAAgC,EAAhC;MAAA;MAAA;IAAA;EAAgC,IACnCI,mBAAA,CAA8D;IAAzDS,EAAE,EAAC,YAAY;IAACb,KAAkC,EAAlC;MAAA;MAAA;IAAA;2BAEvBI,mBAAA,CAKM,OALNU,UAKM,GAJJC,YAAA,CACiBC,yBAAA;gBADQN,KAAA,CAAAO,WAAW;+DAAXP,KAAA,CAAAO,WAAW,GAAAC,MAAA;IAAEC,IAAI,EAAC,OAAO;IAACC,WAAW,EAAC;2CAE/DL,YAAA,CAAiDM,oBAAA;IAArCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAL,MAAA,IAAEM,QAAA,CAAAC,YAAY;;sBAAI,MAAEF,MAAA,QAAAA,MAAA,O,iBAAF,IAAE,E;;;gCACrCnB,mBAAA,CAA8D;IAAzDS,EAAE,EAAC,YAAY;IAACb,KAAkC,EAAlC;MAAA;MAAA;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}