{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_form, {\n    class: \"detail-form-content\",\n    ref: \"ruleForm\",\n    rules: $data.rules,\n    model: $data.ruleForm,\n    \"label-width\": \"80px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"原密码\",\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.password,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.password = $event),\n        \"show-password\": \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"新密码\",\n      prop: \"newpassword\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: $data.ruleForm.newpassword,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.newpassword = $event),\n        \"show-password\": \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"确认密码\",\n      prop: \"repassword\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: $data.ruleForm.repassword,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.ruleForm.repassword = $event),\n        \"show-password\": \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.onUpdateHandler\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"确 定\")])),\n        _: 1 /* STABLE */,\n        __: [3]\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"rules\", \"model\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_el_form","class","ref","rules","$data","model","ruleForm","_component_el_form_item","label","prop","_component_el_input","password","$event","type","newpassword","repassword","_component_el_button","onClick","$options","onUpdateHandler","_cache"],"sources":["D:\\bise\\bise\\front\\src\\views\\update-password.vue"],"sourcesContent":["<template>\n  <div>\n    <el-form\n      class=\"detail-form-content\"\n      ref=\"ruleForm\"\n      :rules=\"rules\"\n      :model=\"ruleForm\"\n      label-width=\"80px\"\n    >\n      <el-form-item label=\"原密码\" prop=\"password\">\n        <el-input v-model=\"ruleForm.password\" show-password></el-input>\n      </el-form-item>\n      <el-form-item label=\"新密码\" prop=\"newpassword\">\n        <el-input\n          type=\"password\"\n          v-model=\"ruleForm.newpassword\"\n          show-password\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"确认密码\" prop=\"repassword\">\n        <el-input\n          type=\"password\"\n          v-model=\"ruleForm.repassword\"\n          show-password\n        ></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"onUpdateHandler\">确 定</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      ruleForm: {},\n      user: {},\n      rules: {\n        password: [\n          {\n            required: true,\n            message: '密码不能为空',\n            trigger: 'blur',\n          },\n        ],\n        newpassword: [\n          {\n            required: true,\n            message: '新密码不能为空',\n            trigger: 'blur',\n          },\n        ],\n        repassword: [\n          {\n            required: true,\n            message: '确认密码不能为空',\n            trigger: 'blur',\n          },\n        ],\n      },\n    }\n  },\n  mounted() {\n    this.$http({\n      url: `${this.$storage.get('sessionTable')}/session`,\n      method: 'get',\n    }).then(({ data }) => {\n      if (data && data.code === 0) {\n        this.user = data.data\n      } else {\n        this.$message.error(data.msg)\n      }\n    })\n  },\n  methods: {\n    onLogout() {\n      this.$storage.remove('Token')\n      this.$router.replace({ name: 'login' })\n    },\n    // 修改密码\n    onUpdateHandler() {\n      this.$refs['ruleForm'].validate((valid) => {\n        if (valid) {\n          var password = ''\n          if (this.user.mima) {\n            password = this.user.mima\n          } else if (this.user.password) {\n            password = this.user.password\n          }\n          if (this.ruleForm.password != password) {\n            this.$message.error('原密码错误')\n            return\n          }\n          if (this.ruleForm.newpassword != this.ruleForm.repassword) {\n            this.$message.error('两次密码输入不一致')\n            return\n          }\n          this.user.password = this.ruleForm.newpassword\n          this.user.mima = this.ruleForm.newpassword\n          this.$http({\n            url: `${this.$storage.get('sessionTable')}/update`,\n            method: 'post',\n            data: this.user,\n          }).then(({ data }) => {\n            if (data && data.code === 0) {\n              this.$message({\n                message: '修改密码成功,下次登录系统生效',\n                type: 'success',\n                duration: 1500,\n                onClose: () => {},\n              })\n            } else {\n              this.$message.error(data.msg)\n            }\n          })\n        }\n      })\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"mappings":";;;;;;uBACEA,mBAAA,CA6BM,cA5BJC,YAAA,CA2BUC,kBAAA;IA1BRC,KAAK,EAAC,qBAAqB;IAC3BC,GAAG,EAAC,UAAU;IACbC,KAAK,EAAEC,KAAA,CAAAD,KAAK;IACZE,KAAK,EAAED,KAAA,CAAAE,QAAQ;IAChB,aAAW,EAAC;;sBAEZ,MAEe,CAFfP,YAAA,CAEeQ,uBAAA;MAFDC,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC;;wBAC7B,MAA+D,CAA/DV,YAAA,CAA+DW,mBAAA;oBAA5CN,KAAA,CAAAE,QAAQ,CAACK,QAAQ;mEAAjBP,KAAA,CAAAE,QAAQ,CAACK,QAAQ,GAAAC,MAAA;QAAE,eAAa,EAAb;;;QAExCb,YAAA,CAMeQ,uBAAA;MANDC,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC;;wBAC7B,MAIY,CAJZV,YAAA,CAIYW,mBAAA;QAHVG,IAAI,EAAC,UAAU;oBACNT,KAAA,CAAAE,QAAQ,CAACQ,WAAW;mEAApBV,KAAA,CAAAE,QAAQ,CAACQ,WAAW,GAAAF,MAAA;QAC7B,eAAa,EAAb;;;QAGJb,YAAA,CAMeQ,uBAAA;MANDC,KAAK,EAAC,MAAM;MAACC,IAAI,EAAC;;wBAC9B,MAIY,CAJZV,YAAA,CAIYW,mBAAA;QAHVG,IAAI,EAAC,UAAU;oBACNT,KAAA,CAAAE,QAAQ,CAACS,UAAU;mEAAnBX,KAAA,CAAAE,QAAQ,CAACS,UAAU,GAAAH,MAAA;QAC5B,eAAa,EAAb;;;QAGJb,YAAA,CAEeQ,uBAAA;wBADb,MAAkE,CAAlER,YAAA,CAAkEiB,oBAAA;QAAvDH,IAAI,EAAC,SAAS;QAAEI,OAAK,EAAEC,QAAA,CAAAC;;0BAAiB,MAAGC,MAAA,QAAAA,MAAA,O,iBAAH,KAAG,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}